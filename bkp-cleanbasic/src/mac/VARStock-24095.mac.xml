<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARStock" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARStock
#include COMSYS
#define SituacaoDisponivel 1
#define SituacaoVencida 2
#define SituacaoEnderecoBloqueado 3
 
OnBeforeFormConstruction(pYKEY)
	//do LoadListaLocaisPermitidos - Não está sendo usado na v3 por enquanto, apenas deixando a tela mais lenta
	quit:(pYKEY = "")
	
	if ($$$KEY1(pYKEY) = "External") {
		do VARLogAfterSave^VARUtil(YBED,YFORM)
		set $piece(^VARTempStock(YM,YBED,1),Y,1) = $$$KEY2(pYKEY)
		set $piece(^VARTempStock(YM,YBED,1),Y,2) = $$$KEY3(pYKEY)
		set $piece(^VARTempStock(YM,YBED,1),Y,4) = $$$KEY4(pYKEY) ;programa
		set $piece(^VARTempStock(YM,YBED,1),Y,5) = $$$KEY5(pYKEY) ;programa
	}
 
	quit
 
OnAfterSave
	new Item, Local
	
	set Item		= $get(VORG(1))
	set Local	 	= $get(VORG(2))
	set OrderBy	 	= $get(VORG(3))
	set Programa 	= $get(VORG(4))
	set ConsultarEm = $get(VORG(5))
	
	if (ConsultarEm = "") {
		set ConsultarEm = 0
	}
 
	set $piece(^VARTempStock(YM,YBED,1),Y,1) = Item
	set $piece(^VARTempStock(YM,YBED,1),Y,2) = Local
	set $piece(^VARTempStock(YM,YBED,1),Y,3) = OrderBy
	set $piece(^VARTempStock(YM,YBED,1),Y,4) = Programa
	set $piece(^VARTempStock(YM,YBED,1),Y,5) = ConsultarEm
	/* 
	if $piece($get(^WWW013(YM,YBED,1)),Y,129) = "0013" { ;Perfil de Juízes
		set $piece(^VARTempStock(YM,YBED,1),Y,2) = YLOCATION
	}
	*/
	do VARLogAfterSave^VARUtil(YBED,YFORM)
 	do GoToForm^COMUtilForm("VARStock",Item,,,,,)
	
	quit
 
OnAfterDataFields
	do PrintJS
	quit:($get(VORG(1)) = "")
	new filterItem, filterLocal, filterPrograma
	
	//Só apresenta os resultados da consulta caso o usuário tenha clicado no botão 'Ok' do form.
	quit:('$$isAfterSaveLogged^VARUtil(YBED,YFORM))
	do ClearVARLogAterSave^VARUtil(YBED,YFORM)
	
	set filterItem     = $get(VORG(1))
	set filterLocal	   = $get(VORG(2))
	set filterPrograma = $get(VORG(4))
	set filterConsult  = $get(VORG(5))
	
	if filterItem  	  = "" set filterItem  	  = $piece(^VARTempStock(YM,YBED,1),Y,1)
	if filterLocal 	  = "" set filterLocal	  = $piece(^VARTempStock(YM,YBED,1),Y,2)	
	if filterPrograma = "" set filterPrograma = $piece(^VARTempStock(YM,YBED,1),Y,4)
	if filterConsult  = "" set filterConsult  = $piece(^VARTempStock(YM,YBED,1),Y,5)
	
	/*
	if $piece($get(^WWW013(YM,YBED,1)),Y,129) = "0013" { ;Perfil de Juízes
		set filterLocal = YLOCATION
	}
	*/							//local atual
	if ((filterLocal '= "") || ((filterConsult '= "") && (filterConsult '= 3))) {
		set:filterLocal="" filterLocal = YLOCATION	
		do PrintEstoqueFisico(filterItem,filterLocal,filterPrograma,filterConsult)
	} else {
		do PrintEstoqueContabil(filterItem,filterPrograma)
	}
	
	quit
	
	
PrintEstoqueContabil(pidItem,pidPrograma="")
	new Item, Local, Quantidade, count, totalQty, prefixStyle, posfixStyle, key, QuantDisponivel,
		QuantIndisponivel, totalQtyDisponivel, totalQtyIndisponivel
	
		set rsContabil = ##class(%ResultSet).%New()

		set meuSQL = "SELECT "
		set meuSQL = meuSQL_" STK.Item, "
		set meuSQL = meuSQL_" LOC.Location, "
		set meuSQL = meuSQL_" LOC.Code as Code, "
		set meuSQL = meuSQL_" INLP.Physical, "
		set meuSQL = meuSQL_" SUM(+STK.QtyOnHand) AS Quantidade, "
		set meuSQL = meuSQL_" LOTE.AttributeValue as LotNumber, "
		set meuSQL = meuSQL_" VALID.AttributeValue as UseByDate, "
		set meuSQL = meuSQL_" PROG.AttributeValue as Program, "
		set meuSQL = meuSQL_" PROGDESC.ProjectDescription as DescProgram, "
		set meuSQL = meuSQL_" MARCA.AttributeValue as Brand, "
		set meuSQL = meuSQL_" STK.Bundle, "
		set meuSQL = meuSQL_" STK.Storage "
		set meuSQL = meuSQL_" FROM alSOH.dBundleStock STK "
		set meuSQL = meuSQL_" LEFT JOIN alLOC.dStorage LOC on (LOC.ID = STK.STORAGE) "
		set meuSQL = meuSQL_" LEFT JOIN alSOH.dBundleAttribute LOTE on (LOTE.Bundle = STK.Bundle AND LOTE.AttributeName = 'Lot Number') "
		set meuSQL = meuSQL_" LEFT JOIN alSOH.dBundleAttribute VALID on (VALID.Bundle = STK.Bundle AND VALID.AttributeName = 'Use By Date') "
		set meuSQL = meuSQL_" LEFT JOIN alSOH.dBundleAttribute PROG on (PROG.Bundle = STK.Bundle AND PROG.AttributeName = 'Program') "
		set meuSQL = meuSQL_" LEFT JOIN alSOH.dBundleAttribute MARCA on (MARCA.Bundle = STK.Bundle AND MARCA.AttributeName = 'Brand') "
		set meuSQL = meuSQL_" LEFT JOIN INProject PROGDESC on (PROGDESC.Project = PROG.AttributeValue) "
		set meuSQL = meuSQL_" LEFT JOIN INLP on (INLP.LocationName = LOC.Location AND INLP.StockLocation = LOC.Code) "
		
		set meuSQL = meuSQL_" WHERE STK.Item = '"_pidItem_"' "

		if (pidPrograma '= ""){
			set meuSQL = meuSQL_" AND PROG.AttributeValue = '"_pidPrograma_"' "
		}
		
		set meuSQL = meuSQL_" GROUP BY STK.Item, LOC.Location "
		set meuSQL = meuSQL_" ORDER BY STK.Item, LOC.Location "
		
		do rsContabil.Prepare(meuSQL)  ;Prepare Query
		do rsContabil.Execute()  ;Execute Query
		
	
		set Tipo = $piece($get(^INART(YM,pidItem,1)),"~",345)
		
		do PrintHeader(pidItem,"",Tipo)
	
		//Tabela
	   	new lstHeader
	 	set lstHeader = ""
	  	set lstHeader = lstHeader_$listbuild("Local","&nbsp;&nbsp;Disponível&nbsp","&nbsp;&nbsp;Não Disponível&nbsp;","&nbsp;&nbsp;Quantidade Total&nbsp;&nbsp;")
  		
	  	if $$Start^COMTable(lstHeader,,,,$$$NO) {
			
			set count    = 0
			set totalQty = 0
			set totalQtyDisponivel   = 0
			set totalQtyIndisponivel = 0
		
			while (rsContabil.Next()) {
				
				set Item       = rsContabil.Data("Item")
				set Local      = rsContabil.Data("Location")
				set Quantidade = rsContabil.Data("Quantidade")
				
				if (pidPrograma '= ""){
					set QuantDisponivel   = $$^INARTMENGE(pidItem,,Local,,0,,,pidPrograma) //0 = Quantidade Disponível
				} else {
					set QuantDisponivel   = $$^INARTMENGE(pidItem,,Local,,0) //0 = Quantidade Disponível
				}
				
				set QuantIndisponivel = Quantidade - QuantDisponivel
			
				set count    = $i(count)
				set totalQty = totalQty + Quantidade
				set totalQtyDisponivel   = totalQtyDisponivel + QuantDisponivel
				set totalQtyIndisponivel = totalQtyIndisponivel + QuantIndisponivel
								
				if (Local = YLOCATION) {
					set prefixStyle = "<strong>"
					set posfixStyle = "</strong>"
				} else {
					set prefixStyle = ""
					set posfixStyle = ""
				}
				
				set key = pidItem_","_Local
				
				do NewLine^COMTable()
		    	do InsertCellCallback^COMTable(prefixStyle_Local_" - "_$piece($get(^WWW0121(YM,YM,Local,1)),Y,1)_prefixStyle,"GoToEstoqueFisico^VARStock",key)
		    	do InsertCell^COMTable(prefixStyle_$$^WWWTR(0,12,QuantDisponivel)_prefixStyle,,,,"RIGHT")
		    	do InsertCell^COMTable(prefixStyle_$$^WWWTR(0,12,QuantIndisponivel)_prefixStyle,,,,"RIGHT")
		    	do InsertCell^COMTable(prefixStyle_$$^WWWTR(0,12,Quantidade)_prefixStyle,,,,"RIGHT")		    		
		    	do EndLine^COMTable()
			}
		
			do NewLine^COMTable("lightsteelblue")
			do InsertCell^COMTable("<strong>Estoque Total na Rede</strong>",,,,"RIGHT",,1)
		    do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,totalQtyDisponivel)_"</strong>",,,,"RIGHT")
		    do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,totalQtyIndisponivel)_"</strong>",,,,"RIGHT")
		    do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,totalQty)_"</strong>",,,,"RIGHT")			    
			do EndLine^COMTable()
		
			do Stop^COMTable()	
	  	}
	
		do rsContabil.Close()
 
	quit
 
 
PrintEstoqueFisico(pidItem,pidLocal,pidPrograma,pfilterConsult)	
	new Item, Local, Storage, Quantidade, Lote, Validade, idPrograma, idBundle, idBundleStorage, count,
		totalQty, nomePrograma, isBlockedStorage, prefixStyle, posfixStyle, descStorage, detalhesReserva,
		objStorage, blnDUC, ItemPolicyHasProgram, ItemPolicyHasBrand, qtyColumns, idMarca, nomeMarca,
		isBlockedPhysicalStorage, reasonBlockedPhysical, descBlockedPhysical, externalKey, orderBy,totalQtyAll,
		Armazenagem,Tipo,LocalAtual,RegiaoAtual,LocalEstoque,ArrayRegiao,ArrayLocais,LocalAdicional,
		LocalFormatado,totalQtyAll
 
	new Armazenagem
	set Armazenagem = $piece($get(^WWW0121(YM,YM,YLOCATION,1)),"~",24)
	
	set Tipo = $piece($get(^INART(YM,pidItem,1)),"~",345)
	
	if ((Armazenagem = "") || (Armazenagem = 0)) { 
		set pfilterConsult = "CENTRODECUSTO" 
	}		 
	
	do PrintHeader(pidItem,pidLocal,Tipo)
	//Início - Definindo os locais da regional do usuário de acordo com o tipo do item
	
	set LocalAtual   = YLOCATION
	set RegiaoAtual  = $piece($get(^WWW0121(YM,YM,LocalAtual,1)),"~",8)	
	set LocalEstoque = ""
	set ArrayRegiao  = ""
	set LocalAdicional = $get(pidLocal)
		
	if (pfilterConsult = "") {
		set ArrayLocais = ";"_LocalAdicional_";"
	}
	
	elseif (pfilterConsult = 0)  {
		set LocalAtual = $$GeraListaLocaisFilhos(LocalAtual)
		set ArrayLocais = ";"_LocalAtual_";"_LocalAdicional_";"
	}
	
	elseif ((pfilterConsult = 1) || (pfilterConsult = 2) || (pfilterConsult = 3) || (pfilterConsult = "CENTRODECUSTO")) {		
		do MontaArrayLocais(LocalEstoque,Tipo,RegiaoAtual,pfilterConsult,YLOCATION)
		set ArrayLocais = ArrayRegiao_";"_LocalAdicional_";"		
	}
	
	//Tabela
   	new lstHeader	 	
 	set lstHeader = ""	 		 
 	
 	set ItemPolicyHasProgram = $$CheckItemPolicyHasProgram^VARINART(pidItem)
 	set ItemPolicyHasBrand   = $$CheckItemPolicyHasBrand^VARINART(pidItem)
 	
 	set lstHeader = lstHeader_$listbuild("Local","Endereço","Lote","Validade")
 	set qtyColumns = 4
 	
  	if (ItemPolicyHasProgram = $$$YES) {
	  	set lstHeader = lstHeader_$listbuild("Programa")
	  	set qtyColumns = $i(qtyColumns)	  	
  	}
  		  	
  	if (ItemPolicyHasBrand = $$$YES) {
	  	set lstHeader = lstHeader_$listbuild("Marca")
  		set qtyColumns = $i(qtyColumns)
  	}
  	
  	set lstHeader = lstHeader_$listbuild("Quantidade")
  	set lstHeader = lstHeader_$listbuild("CMML")
  	set lstHeader = lstHeader_$listbuild("MOV")
  	
  	set qtyColumns = $i(qtyColumns)
  	
  	set Local = ""
  	set totalQtyAll = 0

	set rsFisico = ##class(%ResultSet).%New()
 	
  	if $$Start^COMTable(lstHeader) {		

  		for {
 			set Local = $order(^WWW0121(YM,YM,Local))   
    		quit:(Local = "")
    		
    		set LocalFormatado = ";"_Local_";"
    		
    		if (($piece($get(^WWW0121(YM,YM,Local,1)),"~",24) = $$$YES) && ($find(ArrayLocais,LocalFormatado))) {

				set meuSQL = "SELECT "
				set meuSQL = meuSQL_" STK.Item, "
				set meuSQL = meuSQL_" LOC.Location, "
				set meuSQL = meuSQL_" LOC.Code as Storage, "
				set meuSQL = meuSQL_" INLP.Physical, "
				set meuSQL = meuSQL_" SUM(+STK.QtyOnHand) AS Quantidade, "
				set meuSQL = meuSQL_" LOTE.AttributeValue as Lote, "
				set meuSQL = meuSQL_" VALID.AttributeValue as Validade, "
				set meuSQL = meuSQL_" PROG.AttributeValue as Programa, "
				set meuSQL = meuSQL_" PROGDESC.ProjectDescription as DescProgram, "
				set meuSQL = meuSQL_" MARCA.AttributeValue as Marca, "
				set meuSQL = meuSQL_" STK.Bundle, "
				set meuSQL = meuSQL_" STK.Storage as BundleStorage "
				set meuSQL = meuSQL_" FROM alSOH.dBundleStock STK "
				set meuSQL = meuSQL_" LEFT JOIN alLOC.dStorage LOC on (LOC.ID = STK.STORAGE) "
				set meuSQL = meuSQL_" LEFT JOIN alSOH.dBundleAttribute LOTE on (LOTE.Bundle = STK.Bundle AND LOTE.AttributeName = 'Lot Number') "
				set meuSQL = meuSQL_" LEFT JOIN alSOH.dBundleAttribute VALID on (VALID.Bundle = STK.Bundle AND VALID.AttributeName = 'Use By Date') "
				set meuSQL = meuSQL_" LEFT JOIN alSOH.dBundleAttribute PROG on (PROG.Bundle = STK.Bundle AND PROG.AttributeName = 'Program') "
				set meuSQL = meuSQL_" LEFT JOIN alSOH.dBundleAttribute MARCA on (MARCA.Bundle = STK.Bundle AND MARCA.AttributeName = 'Brand') "
				set meuSQL = meuSQL_" LEFT JOIN INProject PROGDESC on (PROGDESC.Project = PROG.AttributeValue) "
				set meuSQL = meuSQL_" LEFT JOIN INLP on (INLP.LocationName = LOC.Location AND INLP.StockLocation = LOC.Code) "
		
				set meuSQL = meuSQL_" WHERE STK.Item = '"_pidItem_"' "
				set meuSQL = meuSQL_" AND LOC.Location = '"_Local_"' "

				if (pidPrograma '= ""){
					set meuSQL = meuSQL_" AND PROG.AttributeValue = '"_pidPrograma_"' "
				}
		
				set meuSQL = meuSQL_" GROUP BY STK.Item, LOC.Location "
				set meuSQL = meuSQL_" ORDER BY STK.Item, LOC.Location "
				
				do rsFisico.Prepare(meuSQL)  ;Prepare Query
				set sc = rsFisico.Execute()  ;Execute Query
				if $$$ISERR(sc){
					set msg = "Erro ao executar o SQL: "_sc
					$$$StartScript()
					w "alert('"_msg_"');"
					$$$EndScript()
					
					quit
				}					

 				set count = 0
				set totalQty = 0
					
				while (rsFisico.Next()) {

					set Item            = rsFisico.Data("Item")
					set Storage         = rsFisico.Data("Storage")
					set Quantidade      = rsFisico.Data("Quantidade")
					set Lote            = rsFisico.Data("Lote")
					set Validade        = rsFisico.Data("Validade")
					set idPrograma      = rsFisico.Data("Programa")
					set idMarca         = rsFisico.Data("Marca")
					set idBundle        = rsFisico.Data("Bundle")
					set idBundleStorage = rsFisico.Data("BundleStorage")
					
					set count       = $i(count)
					set totalQty    = totalQty + Quantidade
					set totalQtyAll = totalQtyAll + Quantidade
	
					set nomePrograma = $$GetProgramName^VARSQL(idPrograma)
					set nomeMarca    = $$GetBrandName^VARSQL(idMarca)
		
					set isBlockedStorage = ""
					set isBlockedStorage = $$checkIfBlockedStorage(Local,Storage)
		
					set prefixStyle = ""
					set posfixStyle = ""
 
					set objStorage = $get(^INLP(YM,Local,Storage,1))
					set blnDUC     = $piece(objStorage,Y,21)
			
					set descStorage = Storage
			
					if Local = $$getFarmaciaAcoesJudiciais^VARParametroCliente(0) {
				
						if $$SQLGetPatientName^VARSQL(Storage) '= ""{
							set descStorage = $$SQLGetPatientName^VARSQL(Storage)
						}
			
					} elseif (blnDUC = $$$YES) { //Se o endereco é um DUC
				
						set physicalStorage = $piece(objStorage,Y,22)					
						set isBlockedPhysicalStorage = $$checkIfBlockedStorage(Local,physicalStorage)
				
						if (isBlockedPhysicalStorage = $$$YES) {
					
							set reasonBlockedPhysical = $$getMotivoEndBloqueado^VARWMSUtils(Local,physicalStorage)
					
							if (reasonBlockedPhysical '= "") {
								set prefixStyle = "<font color=gray style=text-decoration:line-through><span title = 'Endereço bloqueado. Motivo: "_reasonBlockedPhysical_".'>"
							} else {
								set prefixStyle = "<font color=gray style=text-decoration:line-through><span title = 'Endereço bloqueado.'>"
							}
					
							set posfixStyle = "</span></font>"										
						}
				
						set descStorage = physicalStorage_" ["_Storage_"]"
				
					}
		
					if (isBlockedStorage = $$$YES) {
				
						set reasonBlocked = $$getMotivoEndBloqueado^VARWMSUtils(Local,Storage)
				
						if (reasonBlocked '= "") {
							set prefixStyle = "<font color=gray style=text-decoration:line-through><span title = 'Endereço bloqueado. Motivo: "_reasonBlocked_".'>"
						} else {
							set prefixStyle = "<font color=gray style=text-decoration:line-through><span title = 'Endereço bloqueado.'>"
						}
						set posfixStyle = "</span></font>"
			
					} elseif ( (Validade < $horolog) && (Validade '= "") ) {
						set prefixStyle = "<font color=red style=text-decoration:line-through><span title = 'Produto vencido.'>"
						set posfixStyle = "</span></font>"
					}
			
					if Validade '= "" set Validade = $zdate(Validade,4)	
					set fltCMML = $$GetCMML(Local,Item)
 	  				set fltMOV  = $$GetMOV(Local,Item)			
			
					set detalhesReserva = ""
					set detalhesReserva = $$GetDetalhesReserva(pidItem,Local,Storage,idBundleStorage,idBundle)	
			
					set externalKey = "ExternalEndereco"_$$$COMMA_Storage
			
					do NewLine^COMTable()
			    	;do InsertCell^COMTable(count)
			    	if (count = 1) {
			    		do InsertCell^COMTable(Local_" - "_$piece($get(^WWW0121(YM,YM,Local,1)),Y,1))
			    	} else {
				    	do InsertCell^COMTable("")		    	
			    	}	
			
			    	do InsertCell^COMTable(prefixStyle_descStorage_posfixStyle,"VAREstoqueConsEndereco",externalKey)
			    	do InsertCell^COMTable(prefixStyle_Lote_posfixStyle)
			    	do InsertCell^COMTable(prefixStyle_Validade_posfixStyle)
	    	
			    	if (ItemPolicyHasProgram = $$$YES) {
			    		do InsertCell^COMTable(prefixStyle_nomePrograma_posfixStyle)		    		
			    	}
	    	
			    	if (ItemPolicyHasBrand = $$$YES) {
				    	if (nomeMarca = "") set nomeMarca = "&nbsp;"
				    	do InsertCell^COMTable(prefixStyle_nomeMarca_posfixStyle)	
			    	}
	    	
			    	do InsertCell^COMTable(prefixStyle_detalhesReserva_$$^WWWTR(0,12,Quantidade)_posfixStyle,,,,"RIGHT")
			    	do InsertCell^COMTable(prefixStyle_$$^WWWTR(0,12,fltCMML)_posfixStyle,,,,"RIGHT")
			    	do InsertCell^COMTable(prefixStyle_$$^WWWTR(0,12,fltMOV)_posfixStyle,,,,"RIGHT")
			    	do EndLine^COMTable()
				}
				
				if (count > 0) {
					do NewLine^COMTable("lightsteelblue")
					do InsertCell^COMTable("<strong>Estoque Total no Local</strong>",,,,"RIGHT",,qtyColumns-1)
				    do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,totalQty)_"</strong>",,,,"RIGHT")
				    do InsertCell^COMTable("")	
				    do InsertCell^COMTable("")
					do EndLine^COMTable()
				}	
 
				do rsFisico.Close()		
	
    		}
  		}
  		
  		w "<div align=right style=margin-top:4px;margin-bottom:4px>&raquo; <a style=text-decoration:underline; onclick='doLink(this);' href='javascript:CallBack(""GoToEstoqueContabil^VARStock"","""_pidItem_""");'>Ver todos os locais</a></div>"
  		do NewLine^COMTable("lightsteelblue")
		do InsertCell^COMTable("<strong>Total nos Locais Consultados</strong>",,,,"RIGHT",,qtyColumns-1)
	    do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,totalQtyAll)_"</strong>",,,,"RIGHT")
		do InsertCell^COMTable("")	
		do InsertCell^COMTable("")
	    do EndLine^COMTable()

  		do Stop^COMTable()
  		
  	}
	
	quit
	

PrintHeader(pidItem,pidLocal,pstrTipo)
	new objItem, descItem, idUnit, descUnit, idGroup, descGroup, avgCost, contaCont, descConta, status, descItemComp
 	set objItem = $get(^INART(YM,pidItem,1))
 	
	set descItem  	 = $piece(objItem,Y,1)
	set descItemComp = $piece(objItem,Y,10)
	set idUnit    	 = $piece(objItem,Y,40)
	set descUnit  	 = $$SQLGetDescCompletaUnit^VARSQL(idUnit)
	set idGroup   	 = $piece(objItem,Y,30)
	set descGroup 	 = $$SQLGetDescGrupoItem^VARSQL(idGroup)
	set CMMRede	     = $piece(objItem,Y,276)
	;Petik 28/12/2009
	;Alterado para o novo campo Conta Contábil (D278)
	;set conta     = $piece(objItem,Y,276)
	set conta     = $piece(objItem,Y,278)
	set descConta = ""
	set status	  = $piece(objItem,Y,66) 
		
	if conta '= "" {
		set descConta = $piece($get(^INPARA(YM,"VARTCICONTACONTABIL","PT",conta,1)),Y,1)
	}
	set avgCost   = $$GetCost^INItemCost(pidItem)
	
	if status = "1"{
		write "<br />&nbsp;<b><font color ='red'>Produto Inativo</font></b>"
	}
	write "<hr>" //Draws 1st horizontal line
	write "&nbsp;<span title='"_descItemComp_"'><b>Produto: "_pidItem_" - "_descItem_"</b></span>"
	
	;if pidLocal '= "" {
	;	write "<br /><div style=padding-top:3px>&nbsp;<b>Local:&nbsp;"_pidLocal_" - "_$piece($get(^WWW0121(YM,YM,pidLocal,1)),Y,1)_"</b></div>"
	;}
	
	write "<hr>" //Draws 2nd horizontal line
	write "<table style=font-size:12px>" //Detalhes do Item
	write "<tr><td>Unidade de Estoque:</td><td>"_descUnit_"</td></tr>"
	write "<tr><td>Grupo do Produto:</td><td>"_idGroup_" - "_descGroup_"</td></tr>"
	//write "<tr><td>Conta Contábil:</td><td>"_conta_" - "_descConta_"</td></tr>"
	write "<tr><td>Custo Médio:</td><td>R$ "_$$^WWWTR(0,12,avgCost,4)_"</td></tr>"
	write "<tr> <td>Estoque Principal:</td><td>"_pstrTipo_"</td></tr>"
	write "<tr> <td>CMM (Rede):</td><td><a href="_YAKTION_"EP=WWWFORM&amp;YFORM=VARSESAnaliseCMM&amp;YUSER="_YUSER_"&amp;YBED="_YBED_"&amp;YAUSWAHL=D"_""_","_pidItem_">"_$$^WWWTR(0,12,CMMRede)_"</a></td></tr>"
	write "</table>"
	
	quit
 
checkIfBlockedStorage(pidLocal,pidStorage)
	$$$VAR ; Inicializa as variáveis do Net Manager
	if pidStorage = "" quit ""
	quit $piece($get(^INLP(YM,pidLocal,pidStorage,1)),Y,8)
	
checkIfDisabledStorage(pidLocal,pidStorage)
	if pidStorage = "" quit ""
	quit $piece($get(^INLP(YM,pidLocal,pidStorage,1)),Y,4)
	
 
Imprimir()
	;do Imprimir^VARStock()
	
	set Produto      = $G(VORG(1))
	set pidLocal     = $G(VORG(2))
	set pOrderBy     = $G(VORG(3))
	set pPrograma    = $G(VORG(4))
	set pConsultarEm = $G(VORG(5))
	
	
	if (Produto = "") quit
	
	do RunReportEstoqueConsulta^VARJasperRunReport(Produto,pidLocal,pOrderBy,pPrograma,pConsultarEm)
	
	quit
	
	
GoToEstoqueFisico(pidItem,pidLocal)	
	new externalKey
	set externalKey = "External"_$$$COMMA_pidItem_$$$COMMA_pidLocal
		
 	do GoToForm^COMUtilForm("VARStock",externalKey)
	quit
	
GoToEstoqueContabil(pidItem)
	new externalKey
	set externalKey = "External"_$$$COMMA_pidItem_$$$COMMA_""
	
 	do GoToForm^COMUtilForm("VARStock",externalKey)
	quit
	
GetDetalhesReserva(pidItem,pidLocal,pidStorage,pidStorageBundle,pidBundle)
	quit:( (pidItem = "") || (pidLocal = "") ) ""
 
	new qtyReservada, strReservado, detalhesReserva
	
	set qtyReservada = $$GetReservedForABundle^INListBundles(pidItem,pidLocal,pidStorageBundle,pidBundle)
	quit:(qtyReservada = "") ""	
	quit:(qtyReservada = 0) ""
			
	set strReservado  = $$ListReservations^INDRPRUN4(pidItem,pidLocal,pidStorage,pidBundle)
	
	set detalhesReserva = "<font color='gray' title='"_strReservado_"' >"_
						   "("_$$^WWWTR(0,12,qtyReservada)_") "_
						   "</font>"
	
	quit detalhesReserva
 
GetOrderBy(pPrograma,pEndereco,pID)
	set filterOrderBy = $piece(^VARTempStock(YM,YBED,1),Y,3)
	
	if (filterOrderBy = 1){
		quit pEndereco
	}
	elseif (filterOrderBy = 2){
		quit pPrograma
	}

	quit pID
	
PrintJS
	write !, "<script language=""javascript"">"
	
	&js<
	
		function OnLoadOrderBy() {
			OnBlurLocal();	
		}
		
		function OnBlurLocal() {
			if (document.getElementById('Y#(YFORM)#M2').value != "") {
				document.getElementById('Y#(YFORM)#M3').disabled = false;
			
			} else {
				// Habilita o campo Mostrar Programas
				document.getElementById('Y#(YFORM)#M3').disabled = true;	
				document.getElementById('Y#(YFORM)#M3').value = "";
			}				
		}		
		
		function addEvent(obj, evType, fn) {
 			if (obj.addEventListener) {
   				obj.addEventListener(evType, fn, false);
   				return true;
 			} else if (obj.attachEvent){
   				var r = obj.attachEvent('on'+evType, fn);
   				return r; 
 			} else {
   				return false;
 			}
		}		
 
		addEvent(document.forms[1].YVARStockM2, 'blur', OnBlurLocal);
		addEvent(window,'load', OnLoadOrderBy);
			
	>
	
	write !, "</script>"
	
	quit
	
GetSituacaoLote(codLocal,codStorage,validade)
	set objStorage = $get(^INLP(YM,codLocal,codStorage,1))
	
	set isBlockedStorage = ""
	set isBlockedStorage = $$checkIfBlockedStorage(codLocal,codStorage)
	
	set physicalStorage = $piece(objStorage,Y,22)					
	set isBlockedPhysicalStorage = $$checkIfBlockedStorage(codLocal,physicalStorage)
	set blnDUC     = $piece(objStorage,Y,21)
	set isBlockedStorage = $$checkIfBlockedStorage(codLocal,codStorage)
	
	if (blnDUC = $$$YES) {
		if (isBlockedPhysicalStorage = $$$YES) {	
			set estado = $$$SituacaoEnderecoBloqueado
		}
	}
		
	if (isBlockedStorage = $$$YES) {	
		set estado = $$$SituacaoEnderecoBloqueado
	}  
	elseif ( (validade < $horolog) && (validade '= "") ) {	
		set estado = $$$SituacaoVencida
	} 
	else {
		set estado = $$$SituacaoDisponivel
	}
			
	quit estado
			
ValidaLocalUsuario(pLocal,pUsuario)
	new blValido, UserAccess
	set blValido = $$$YES
	set UserAccess = $listfromstring($$$WWW013AllowedLocations($get(^WWW013(0,pUsuario,1))),";")
		if ('$listfind(UserAccess,pLocal)){
			set blValido = $$$NO
		}
	quit blValido
	
LoadListaLocaisPermitidos
	new location, locationName
 
 	kill ^COMTempList(YM,YUSER,"VARLocaisPermitidos")
 
	&sql(
		DECLARE CursorLocal CURSOR FOR 
		SELECT Location, LocationName
		INTO :location, :locationName
		FROM WWW0121
 		WHERE $$ValidaLocalUsuario^VARStock(Location,:YBED) = 1)
 		
	
	&sql(OPEN CursorLocal)
    if (SQLCODE) {
		quit
    }
    
   	for { &sql(FETCH CursorLocal)
		quit:SQLCODE
		set ^COMTempList(YM,YUSER,"VARLocaisPermitidos",location,1)=locationName
   	}
 
   	&sql(CLOSE CursorLocal)
 
	quit
	
GeraListaLocaisFilhos(pstrLocalPai)
	if $length(pstrLocalPai)=0 quit ""
	if $length(pstrLocalPai)>4 quit pstrLocalPai
	set strLocalFilho=$order(^WWW0121(YM,YM,pstrLocalPai))
	set strListaLocais = pstrLocalPai
	FOR { 
		QUIT:(pstrLocalPai'=$piece(strLocalFilho,".",1))
		set strListaLocais = strListaLocais _";"_strLocalFilho
		set strLocalFilho=$order(^WWW0121(YM,YM,strLocalFilho))
	}
	quit strListaLocais
	
	
MontaArrayLocais(LocalEstoque,Tipo,RegiaoAtual,Filtro,LocalAtual)
 
	new RegiaoLocalEstoque, TipoDoLocalEstoque, cnt, LocalAbastecedor, ArrayAbastecedores
	
	set ArrayRegiao = ""
	
	if Filtro = 1 {
	
		for {
	 		set LocalEstoque = $order(^WWW0121(YM,YM,LocalEstoque))   
	    	quit:(LocalEstoque = "")
			
			set RegiaoDoLocalEstoque = $piece($get(^WWW0121(YM,YM,LocalEstoque,1)),"~",8)
			set TipoDoLocalEstoque   = $piece($get(^WWW0121(YM,YM,LocalEstoque,1)),"~",63)
			
			if (TipoDoLocalEstoque = Tipo) && (RegiaoAtual = RegiaoDoLocalEstoque) && ($piece($get(^WWW0121(YM,YM,LocalEstoque,1)),"~",24) = $$$YES) {				
				if (LocalEstoque=LocalAtual) {set LocalEstoque = $$GeraListaLocaisFilhos(LocalEstoque)}
				set ArrayRegiao = ""_ArrayRegiao_";"_LocalEstoque_""							
			}
		}	
	 
			if Tipo = "FARMACIA"     {set ArrayRegiao = ";5;5070;5071"_ArrayRegiao_";"}
			if Tipo = "ALMOXARIFADO" {set ArrayRegiao = ";1"_ArrayRegiao_";"}
	}
	
	elseif Filtro = 2 {
	
		for {
	 		set LocalEstoque = $order(^WWW0121(YM,YM,LocalEstoque))   
	    	quit:(LocalEstoque = "")
			
			set TipoDoLocalEstoque   = $piece($get(^WWW0121(YM,YM,LocalEstoque,1)),"~",63)
			
			if ((TipoDoLocalEstoque = Tipo) && ($length(LocalEstoque) <= 4) && ($piece($get(^WWW0121(YM,YM,LocalEstoque,1)),"~",24) = $$$YES)) {				
				if ($piece(LocalEstoque,".",2)="") {
					if (LocalEstoque=LocalAtual) {
						set LocaisFilhos = $$GeraListaLocaisFilhos(LocalEstoque)
						set ArrayRegiao = ""_ArrayRegiao_";"_LocaisFilhos_""			
					} else {
						set ArrayRegiao = ""_ArrayRegiao_";"_LocalEstoque_""			
					}
				}
			}
		}	
					 
			if Tipo = "FARMACIA"     {set ArrayRegiao = ";5;5070;5071"_ArrayRegiao_";"}
			if Tipo = "ALMOXARIFADO" {set ArrayRegiao = ";1"_ArrayRegiao_";"}
	}
	
	elseif Filtro = 3 {
		
		for {
	 		set LocalEstoque = $order(^WWW0121(YM,YM,LocalEstoque))   
	    	quit:(LocalEstoque = "")
			
			set TipoDoLocalEstoque   = $piece($get(^WWW0121(YM,YM,LocalEstoque,1)),"~",63)
			
			if (TipoDoLocalEstoque = Tipo) && ($piece($get(^WWW0121(YM,YM,LocalEstoque,1)),"~",24) = $$$YES) {				
				if ($piece(LocalEstoque,".",2)="") {
					if (LocalEstoque=LocalAtual) {
						set LocaisFilhos = $$GeraListaLocaisFilhos(LocalEstoque)
						set ArrayRegiao = ""_ArrayRegiao_";"_LocaisFilhos_""			
					} else {
						set ArrayRegiao = ""_ArrayRegiao_";"_LocalEstoque_""			
					}
				}
			}
		}	
			 
			if Tipo = "FARMACIA"     {set ArrayRegiao = ";5;5070;5071"_ArrayRegiao_";"}
			if Tipo = "ALMOXARIFADO" {set ArrayRegiao = ";1"_ArrayRegiao_";"}
	}		
 
 
	elseif Filtro = "CENTRODECUSTO" {
		
		set ArrayAbastecedores = ""
		set Abastecedores = $piece($get(^WWW0121(YM,YM,LocalAtual,1)),"~",78)
				
		for cnt = 1:1:$length(Abastecedores,";") {
			
			set LocalAbastecedor   = $piece(Abastecedores,";",cnt)
			if (LocalAbastecedor '= "") {	
				set TipoDoLocalEstoque = $piece($get(^WWW0121(YM,YM,LocalAbastecedor,1)),"~",63)
				if (TipoDoLocalEstoque = Tipo) {
					set ArrayAbastecedores = ""_ArrayAbastecedores_";"_LocalAbastecedor_""			
				}
			}
		}			
		
		if ArrayAbastecedores = "" { 
			$$$StartScript()
			w "alert('O centro de custo "_YLOCATION_" não tem como abastecedor nenhum local de estoque do tipo "_Tipo_". O produto pesquisado é do tipo "_Tipo_". A busca não retornará resultados.'); "
			$$$EndScript()
			quit		
		}						
		
		if Tipo = "FARMACIA"     {set ArrayRegiao = ";5;5070;5071"_ArrayAbastecedores_";"}
		if Tipo = "ALMOXARIFADO" {set ArrayRegiao = ";1"_ArrayAbastecedores_";"}
	
	}			
		
	quit ArrayRegiao
 
GetCMML(pLocal,pItem)
    $$$VAR
 	new fltCMML	
 	if ($data(^INDRPITEM) '= 10){
 		quit 0	
 	}
 	if (($order(^INDRPITEM(YM,pLocal-1)) = pLocal)
 		&&
 		($order(^INDRPITEM(YM,pLocal,pItem -1)) = pItem)) {
		set fltCMML = $piece($get(^INDRPITEM(YM,pLocal,pItem,1)),Y,120)
 	}  else{
 	  set fltCMML = ""
 	}
 	  
 	if (fltCMML = "") {
	 	set fltCMML = "0"
 	}
 	
 	quit fltCMML
 
GetMOV(pLocal,pItem)
    $$$VAR
	new fltMOV
	set fltMOV = $piece($get(^INDRPITEM(YM,pLocal,pItem,1)),Y,100)
  		
 	if (fltMOV = "") {
 		set fltMOV = "0"
 	}
 	
 	quit fltMOV
 
MostraCoberturaEstoque()
	do GoToForm^COMUtilForm("VARRelatorioCoberturaEstoqueLocal","","","","",,"") 	
	quit
	

PrintEstoqueContabilOld(pidItem,pidPrograma)
	new Item, Local, Quantidade, count, totalQty, prefixStyle, posfixStyle, key, QuantDisponivel,
		QuantIndisponivel, totalQtyDisponivel, totalQtyIndisponivel
	
		&sql(DECLARE StockAllLocation CURSOR FOR
			 SELECT alSOH.dBundleStock.Item,
			 		alSOH.dBundleStock.Storage->Location,
			 		SUM(+alSOH.dBundleStock.QtyOnHand)
			   INTO :Item,:Local,:Quantidade
			   FROM alSOH.dBundleStock
			  WHERE alSOH.dBundleStock.Item = :pidItem
			  	AND	((:pidPrograma IS NULL) OR (alSOH.dBundleStock.Bundle->Program = :pidPrograma))
		   GROUP BY dBundleStock.Item, dBundleStock.Storage->Location
		)
	
		&sql(open StockAllLocation)
	    if (SQLCODE) {
			quit
	    }	
		
		set Tipo = $piece($get(^INART(YM,pidItem,1)),"~",345)
		
		do PrintHeader(pidItem,"",Tipo)
	
		//Tabela
	   	new lstHeader
	 	set lstHeader = ""
	  	set lstHeader = lstHeader_$listbuild("Local","&nbsp;&nbsp;Disponível&nbsp","&nbsp;&nbsp;Não Disponível&nbsp;","&nbsp;&nbsp;Quantidade Total&nbsp;&nbsp;")
  	
	  	if $$Start^COMTable(lstHeader,,,,$$$NO) {
			
			set count    = 0
			set totalQty = 0
			set totalQtyDisponivel   = 0
			set totalQtyIndisponivel = 0
		
			for { &sql(fetch StockAllLocation)
					   quit:SQLCODE
				
				if (filterPrograma '= ""){
					set QuantDisponivel   = $$^INARTMENGE(pidItem,,Local,,0,,,filterPrograma) //0 = Quantidade Disponível
				} else {
					set QuantDisponivel   = $$^INARTMENGE(pidItem,,Local,,0) //0 = Quantidade Disponível
				}
				
				set QuantIndisponivel = Quantidade - QuantDisponivel
			
				set count    = $i(count)
				set totalQty = totalQty + Quantidade
				set totalQtyDisponivel   = totalQtyDisponivel + QuantDisponivel
				set totalQtyIndisponivel = totalQtyIndisponivel + QuantIndisponivel
								
				if (Local = YLOCATION) {
					set prefixStyle = "<strong>"
					set posfixStyle = "</strong>"
				} else {
					set prefixStyle = ""
					set posfixStyle = ""
				}
				
				set key = pidItem_","_Local
				
				do NewLine^COMTable()
		    	do InsertCellCallback^COMTable(prefixStyle_Local_" - "_$piece($get(^WWW0121(YM,YM,Local,1)),Y,1)_prefixStyle,"GoToEstoqueFisico^VARStock",key)
		    	do InsertCell^COMTable(prefixStyle_$$^WWWTR(0,12,QuantDisponivel)_prefixStyle,,,,"RIGHT")
		    	do InsertCell^COMTable(prefixStyle_$$^WWWTR(0,12,QuantIndisponivel)_prefixStyle,,,,"RIGHT")
		    	do InsertCell^COMTable(prefixStyle_$$^WWWTR(0,12,Quantidade)_prefixStyle,,,,"RIGHT")		    		
		    	do EndLine^COMTable()
			}
		
			do NewLine^COMTable("lightsteelblue")
			do InsertCell^COMTable("<strong>Estoque Total na Rede</strong>",,,,"RIGHT",,1)
		    do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,totalQtyDisponivel)_"</strong>",,,,"RIGHT")
		    do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,totalQtyIndisponivel)_"</strong>",,,,"RIGHT")
		    do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,totalQty)_"</strong>",,,,"RIGHT")			    
			do EndLine^COMTable()
		
			do Stop^COMTable()	
	  	}
	
		&sql(close StockAllLocation)
 
	quit


PrintEstoqueFisicoOld(pidItem,pidLocal,pidPrograma,pfilterConsult)	
	new Item, Local, Storage, Quantidade, Lote, Validade, idPrograma, idBundle, idBundleStorage, count,
		totalQty, nomePrograma, isBlockedStorage, prefixStyle, posfixStyle, descStorage, detalhesReserva,
		objStorage, blnDUC, ItemPolicyHasProgram, ItemPolicyHasBrand, qtyColumns, idMarca, nomeMarca,
		isBlockedPhysicalStorage, reasonBlockedPhysical, descBlockedPhysical, externalKey, orderBy,totalQtyAll,
		Armazenagem,Tipo,LocalAtual,RegiaoAtual,LocalEstoque,ArrayRegiao,ArrayLocais,LocalAdicional,
		LocalFormatado,totalQtyAll
 
	new Armazenagem
	set Armazenagem = $piece($get(^WWW0121(YM,YM,YLOCATION,1)),"~",24)
	
	set Tipo = $piece($get(^INART(YM,pidItem,1)),"~",345)
	
	if ((Armazenagem = "") || (Armazenagem = 0)) { 
		set pfilterConsult = "CENTRODECUSTO" 
	}		 
	
	do PrintHeader(pidItem,pidLocal,Tipo)
	//Início - Definindo os locais da regional do usuário de acordo com o tipo do item
	
	set LocalAtual   = YLOCATION
	set RegiaoAtual  = $piece($get(^WWW0121(YM,YM,LocalAtual,1)),"~",8)	
	set LocalEstoque = ""
	set ArrayRegiao  = ""
	set LocalAdicional = $get(pidLocal)
		
	if (pfilterConsult = "") {
		set ArrayLocais = ";"_LocalAdicional_";"
	}
	
	elseif (pfilterConsult = 0)  {
		set LocalAtual = $$GeraListaLocaisFilhos(LocalAtual)
		set ArrayLocais = ";"_LocalAtual_";"_LocalAdicional_";"
	}
	
	elseif ((pfilterConsult = 1) || (pfilterConsult = 2) || (pfilterConsu]]><![CDATA[lt = 3) || (pfilterConsult = "CENTRODECUSTO")) {		
		do MontaArrayLocais(LocalEstoque,Tipo,RegiaoAtual,pfilterConsult,YLOCATION)
		set ArrayLocais = ArrayRegiao_";"_LocalAdicional_";"		
	}
	
	//Tabela
   	new lstHeader	 	
 	set lstHeader = ""	 		 
 	
 	set ItemPolicyHasProgram = $$CheckItemPolicyHasProgram^VARINART(pidItem)
 	set ItemPolicyHasBrand   = $$CheckItemPolicyHasBrand^VARINART(pidItem)
 	
 	set lstHeader = lstHeader_$listbuild("Local","Endereço","Lote","Validade")
 	set qtyColumns = 4
 	
  	if (ItemPolicyHasProgram = $$$YES) {
	  	set lstHeader = lstHeader_$listbuild("Programa")
	  	set qtyColumns = $i(qtyColumns)	  	
  	}
  		  	
  	if (ItemPolicyHasBrand = $$$YES) {
	  	set lstHeader = lstHeader_$listbuild("Marca")
  		set qtyColumns = $i(qtyColumns)
  	}
  	
  	set lstHeader = lstHeader_$listbuild("Quantidade")
  	set lstHeader = lstHeader_$listbuild("CMML")
  	set lstHeader = lstHeader_$listbuild("MOV")
  	
  	set qtyColumns = $i(qtyColumns)
  	
  	set Local = ""
  	set totalQtyAll = 0
  	
  	if $$Start^COMTable(lstHeader) {		
  		for {
 			set Local = $order(^WWW0121(YM,YM,Local))   
    		quit:(Local = "")
    		
    		set LocalFormatado = ";"_Local_";"
    		
    		if (($piece($get(^WWW0121(YM,YM,Local,1)),"~",24) = $$$YES) && ($find(ArrayLocais,LocalFormatado))) {
				&sql(DECLARE Stock CURSOR FOR
					 SELECT alSOH.dBundleStock.Item,
					 		alSOH.dBundleStock.Storage->Location,
					 		alSOH.dBundleStock.Storage->Code,
					 		+alSOH.dBundleStock.QtyOnHand,
					 		alSOH.dBundleStock.Bundle->LotNumber,
					 		alSOH.dBundleStock.Bundle->UseByDate,
					 		alSOH.dBundleStock.Bundle->Program,
					 		alSOH.dBundleStock.Bundle->Brand,
					 		alSOH.dBundleStock.Bundle->ID,
					 		alSOH.dBundleStock.Storage
					   INTO :Item, :Local, :Storage, :Quantidade, :Lote, :Validade, :idPrograma, :idMarca, :idBundle, :idBundleStorage
					   FROM alSOH.dBundleStock
					  WHERE alSOH.dBundleStock.Item = :pidItem
					   AND  alSOH.dBundleStock.Storage->Location = :Local
					   AND	((:pidPrograma IS NULL) OR (alSOH.dBundleStock.Bundle->Program = :pidPrograma))
					  ORDER BY $$GetOrderBy^VARStock(
					  			 $$GetProgramName^VARSQL(alSOH.dBundleStock.Bundle->Program)
					  			,$$SQLGetPhysicalStorage^VARSQL(alSOH.dBundleStock.Storage->Code,alSOH.dBundleStock.Storage->Location)
					  			,alSOH.dBundleStock.Bundle->ID
					  )
				)
	
				&sql(open Stock)
			    if (SQLCODE) {
					quit
			    }
 
				set count = 0
				set totalQty = 0
				
				
	
				for { &sql(fetch Stock)
						   quit:SQLCODE
		
					set count = $i(count)
					set totalQty = totalQty + Quantidade
					set totalQtyAll = totalQtyAll + Quantidade
	
					set nomePrograma = $$GetProgramName^VARSQL(idPrograma)
					set nomeMarca    = $$GetBrandName^VARSQL(idMarca)
		
					set isBlockedStorage = ""
					set isBlockedStorage = $$checkIfBlockedStorage(Local,Storage)
		
					set prefixStyle = ""
					set posfixStyle = ""
 
					set objStorage = $get(^INLP(YM,Local,Storage,1))
					set blnDUC     = $piece(objStorage,Y,21)
			
					set descStorage = Storage
			
					if Local = $$getFarmaciaAcoesJudiciais^VARParametroCliente(0) {
				
						if $$SQLGetPatientName^VARSQL(Storage) '= ""{
							set descStorage = $$SQLGetPatientName^VARSQL(Storage)
						}
			
					} elseif (blnDUC = $$$YES) { //Se o endereco é um DUC
				
						set physicalStorage = $piece(objStorage,Y,22)					
						set isBlockedPhysicalStorage = $$checkIfBlockedStorage(Local,physicalStorage)
				
						if (isBlockedPhysicalStorage = $$$YES) {
					
							set reasonBlockedPhysical = $$getMotivoEndBloqueado^VARWMSUtils(Local,physicalStorage)
					
							if (reasonBlockedPhysical '= "") {
								set prefixStyle = "<font color=gray style=text-decoration:line-through><span title = 'Endereço bloqueado. Motivo: "_reasonBlockedPhysical_".'>"
							} else {
								set prefixStyle = "<font color=gray style=text-decoration:line-through><span title = 'Endereço bloqueado.'>"
							}
					
							set posfixStyle = "</span></font>"										
						}
				
						set descStorage = physicalStorage_" ["_Storage_"]"
				
					}
		
					if (isBlockedStorage = $$$YES) {
				
						set reasonBlocked = $$getMotivoEndBloqueado^VARWMSUtils(Local,Storage)
				
						if (reasonBlocked '= "") {
							set prefixStyle = "<font color=gray style=text-decoration:line-through><span title = 'Endereço bloqueado. Motivo: "_reasonBlocked_".'>"
						} else {
							set prefixStyle = "<font color=gray style=text-decoration:line-through><span title = 'Endereço bloqueado.'>"
						}
						set posfixStyle = "</span></font>"
			
					} elseif ( (Validade < $horolog) && (Validade '= "") ) {
						set prefixStyle = "<font color=red style=text-decoration:line-through><span title = 'Produto vencido.'>"
						set posfixStyle = "</span></font>"
					}
			
					if Validade '= "" set Validade = $zdate(Validade,4)	
					set fltCMML = $$GetCMML(Local,Item)
 	  				set fltMOV  = $$GetMOV(Local,Item)			
			
					set detalhesReserva = ""
					set detalhesReserva = $$GetDetalhesReserva(pidItem,Local,Storage,idBundleStorage,idBundle)	
			
					set externalKey = "ExternalEndereco"_$$$COMMA_Storage
			
					do NewLine^COMTable()
			    	;do InsertCell^COMTable(count)
			    	if (count = 1) {
			    		do InsertCell^COMTable(Local_" - "_$piece($get(^WWW0121(YM,YM,Local,1)),Y,1))
			    	} else {
				    	do InsertCell^COMTable("")		    	
			    	}	
			
			    	do InsertCell^COMTable(prefixStyle_descStorage_posfixStyle,"VAREstoqueConsEndereco",externalKey)
			    	do InsertCell^COMTable(prefixStyle_Lote_posfixStyle)
			    	do InsertCell^COMTable(prefixStyle_Validade_posfixStyle)
	    	
			    	if (ItemPolicyHasProgram = $$$YES) {
			    		do InsertCell^COMTable(prefixStyle_nomePrograma_posfixStyle)		    		
			    	}
	    	
			    	if (ItemPolicyHasBrand = $$$YES) {
				    	if (nomeMarca = "") set nomeMarca = "&nbsp;"
				    	do InsertCell^COMTable(prefixStyle_nomeMarca_posfixStyle)	
			    	}
	    	
			    	do InsertCell^COMTable(prefixStyle_detalhesReserva_$$^WWWTR(0,12,Quantidade)_posfixStyle,,,,"RIGHT")
			    	do InsertCell^COMTable(prefixStyle_$$^WWWTR(0,12,fltCMML)_posfixStyle,,,,"RIGHT")
			    	do InsertCell^COMTable(prefixStyle_$$^WWWTR(0,12,fltMOV)_posfixStyle,,,,"RIGHT")
			    	do EndLine^COMTable()
				}
				
				if (count > 0) {
					do NewLine^COMTable("lightsteelblue")
					do InsertCell^COMTable("<strong>Estoque Total no Local</strong>",,,,"RIGHT",,qtyColumns-1)
				    do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,totalQty)_"</strong>",,,,"RIGHT")
				    do InsertCell^COMTable("")	
				    do InsertCell^COMTable("")
					do EndLine^COMTable()
				}	
 
				&sql(close Stock)
    		}
  		}
  		w "<div align=right style=margin-top:4px;margin-bottom:4px>&raquo; <a style=text-decoration:underline; onclick='doLink(this);' href='javascript:CallBack(""GoToEstoqueContabil^VARStock"","""_pidItem_""");'>Ver todos os locais</a></div>"
  		do NewLine^COMTable("lightsteelblue")
		do InsertCell^COMTable("<strong>Total nos Locais Consultados</strong>",,,,"RIGHT",,qtyColumns-1)
	    do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,totalQtyAll)_"</strong>",,,,"RIGHT")
		do InsertCell^COMTable("")	
		do InsertCell^COMTable("")
	    do EndLine^COMTable()
  	}
  	do Stop^COMTable()
		
	
	quit


]]></Routine>
</Export>