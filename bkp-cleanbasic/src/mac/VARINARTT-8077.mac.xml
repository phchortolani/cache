<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARINARTT" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARINARTT
	#include COMSYS
	#include INConst
	#include COMGridEdit31
	

	quit



OnBlurItem(pYKEY,pintRow,pidField,&pobjINARTT)
	new objItem
	
	if (pidField '= "") {
		set objItem = ##class(alINV.iUINV).GetItem(pidField) //SR15943:
		if objItem '= "" {
			set:('$data(YFONTCOLOR)) YFONTCOLOR = "Black"
			set:('$data(YGRIDWHITE)) YGRIDWHITE = "ivory"	//SR16905
			set YTOOLTIP = ""
			set YBACKGROUNDCOLOR = YGRIDWHITE
			do ScreenUpdateStyle^COMGridEdit31S("pY"_pintRow_"_"_$$$FldINARTTItemNumber1)
 
			//Unidade de Medida
			set $$$INARTTUnit(pobjINARTT) = $$LoadUnitOfMeasureList^INARTUtilities($$$INARTTItemNumber1(pobjINARTT))
			
			//Descrição
			set $$$INARTTDescription(pobjINARTT) = $PIECE($GET(^INART(YM,$$$INARTTItemNumber1(pobjINARTT),1)),"~",1)
			
			
			//Custo Médio
			if $$$INARTTQuantity(pobjINARTT) = ""{
				;Se não tiver digitado a quantidade só traz o custo médio
				set $$$INARTTValue1(pobjINARTT) = $$GetCost^INItemCost($$$INARTTItemNumber1(pobjINARTT))
			}
			else{
				;Se já tiver digitado a quantidade, traz o custo já considerando a quantidade digitada
				set $$$INARTTValue1(pobjINARTT) = $$GetCost^INItemCost($$$INARTTItemNumber1(pobjINARTT))*$$$INARTTQuantity(pobjINARTT)
			}
			
			
			//ZPos (Sub No.)
			//Estou populando esse campo porque o core preenche (não sei se é usado em algum momento)
			set $$$INARTTZPos(pobjINARTT) = pintRow
			
			
			//RecordingTimeStamps (Registro do Identificador do Tempo)
			//Estou populando esse campo porque o core preenche (não sei se é usado em algum momento)
			set $$$INARTTRecordingTimeStamps(pobjINARTT) = $H
			
			//PreparationTime (Tempo de Preparação)
			//Estou populando esse campo porque o core preenche (não sei se é usado em algum momento)
			set $$$INARTTPreparationTime(pobjINARTT) = 0
			
			//Load the Dynamic Grid
			;do UpdateATP(pintRow,pobjReqLine)
			;do ShowItems^VARTCIReq(1, "INReq"_$$$DELIM_"INReqLine"_$$$DELIM_1_$$$DELIM_1)
			
			do CalcularCustoTotal($$$KEY1(pYKEY),pintRow,pobjINARTT)
			
		} else {
			set:('$data(YFONTCOLOR)) YFONTCOLOR = "Black"
			set YTOOLTIP = $$$Text("IN00801")  	//"Invalid Item"
			set YBACKGROUNDCOLOR = YRED
			do ScreenUpdateStyle^COMGridEdit31S("pY"_pintRow_"_"_$$$FldINARTTItemNumber1)
		}
	}
 
	quit



OnBlurQtde(pYKEY,pintRow,pQtde,&pobjINARTT)
	new objItem
	
	if (pQtde '= "") {
		//do ScreenUpdateStyle^COMGridEdit31S("pY"_pintRow_"_"_$$$FldINARTTItemNumber1)
 
		//Custo Médio
		if $$$INARTTQuantity(pobjINARTT) = ""{
			set $$$INARTTValue1(pobjINARTT) = $$GetCost^INItemCost($$$INARTTItemNumber1(pobjINARTT))
		}
		else{
			set $$$INARTTValue1(pobjINARTT) = $$GetCost^INItemCost($$$INARTTItemNumber1(pobjINARTT))*$$$INARTTQuantity(pobjINARTT)
		}
		//Load the Dynamic Grid
		;do UpdateATP(pintRow,pobjReqLine)
		;do ShowItems^VARTCIReq(1, "INReq"_$$$DELIM_"INReqLine"_$$$DELIM_1_$$$DELIM_1)
		
		do CalcularCustoTotal($$$KEY1(pYKEY),pintRow,pobjINARTT)
		
	}



OnBeforeDataAccess(YKEY, YFELD)


	quit
	

	
CalcularCustoTotal(pidKit,pidLinhaGrid="",pobjLinhaGrid="")

	new fltCAD,fltCalcTot,GridContent,idLine,objLine
	
	//$$$LogR("CalculateSummTotal",pidKit_"<"_pidLinha_"<"_pobjLinha)
	
	do GetGridContents^COMGridEdit31Interface(.GridContent)
	set idLine = ""
	set fltCalcTot = ""
	for {
		set idLine = $order(GridContent(pidKit,idLine))
		quit:idLine=""
		
		set objLine = $get(GridContent(pidKit,idLine))
	
		if pobjLinhaGrid="" {
			set fltCAD = $$$INARTTValue1(objLine)
			
		} else {
			if pidLinhaGrid = idLine {
				set fltCAD = $$$INARTTValue1(pobjLinhaGrid)
			} else {					
				set fltCAD = $$$INARTTValue1(objLine)
			}
		}
		if fltCAD'="" set fltCalcTot = fltCalcTot + fltCAD
	}
	do UpdateHeaderField^COMGridEdit31G("M2",fltCalcTot,"M")  
	;set %TXT(1) = %TXT(1)_"#YVARINARTT1M2~"_fltCalcTot
	//do OnBlur^INReceipt($$$FldINRECSummaryTotal)
	quit


GetCustoTotal(pidKit)
	;$$GetCustoTotal^VARINARTT(YKEY)

	new fltCAD,fltCalcTot,GridContent,idLine,objLine
	
	set idLine = ""
	set fltCalcTot = ""
	for {
		set idLine = $order(^INARTT(YM,pidKit,idLine))
		quit:idLine=""
		
		set objLine = $get(^INARTT(YM,pidKit,idLine,1))
		
		set fltCAD = $$$INARTTValue1(objLine)
		if fltCAD'="" set fltCalcTot = fltCalcTot + fltCAD
	}

	quit fltCalcTot
	
]]></Routine>
</Export>