<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VAREnvInfo" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VAREnvInfo
	#import VAR.infra.environment
	quit

OnAfterDataFields()
	if ('##class(Api).IsDllAvailable()) {
		write !, "<br/><strong>ERRO: Não foi possível acessar a DLL de monitoramento de ambiente.</strong>"
		quit
	}
	elseif ('$isObject(##class(Api).GetInstance())) {
		write !, "<br/><strong>ERRO: Não foi possível carregar a DLL de monitoramento de ambiente.</strong>"
		quit
	}

	set GiB = 1024 * 1024 * 1024

	kill arrDirRel

	set dir = ##class(Api).GetInstance().GetInstallationDirectory()
	set id = ##class(Api).GetInstance().GetPartitionIdFromDir(dir)
	if ($length(id) > 0) {
		set arrDirRel(id, $increment(arrDirRel(id))) = "Instalação do Ensemble: "_dir
	}

	set dir = ##class(Api).GetInstance().GetPrimaryDirectoryJournal()
	set id = ##class(Api).GetInstance().GetPartitionIdFromDir(dir)
	if ($length(id) > 0) {
		set arrDirRel(id, $increment(arrDirRel(id))) = "Journal Primário: "_dir
	}

	set dir = ##class(Api).GetInstance().GetAlternateDirectoryJournal()
	set id = ##class(Api).GetInstance().GetPartitionIdFromDir(dir)
	if ($length(id) > 0) {
		set arrDirRel(id, $increment(arrDirRel(id))) = "Journal Alternativo: "_dir
	}

	set list = ##class(Api).GetInstance().GetDatabaseDirectoryList()
	for i = 1:1:list.Count() {
		set dir = list.GetAt(i)
		set id = ##class(Api).GetInstance().GetPartitionIdFromDir(dir)
		if ($length(id) > 0) {
			set arrDirRel(id, $increment(arrDirRel(id))) = "Base de Dados: "_dir
		}
	}

	write !, "<br/><strong>DISCO</strong>"

	set lstHeader = $listBuild("Seq.", "ID", "Tipo", "Tamanho (GiB)",
		"Em Uso (GiB)", "Em Uso (%)", "Diretórios Relevantes")
	if ($$Start^COMTable(lstHeader, "Partições (Medidas na Norma IEC 80000-13):")) {
		set count = ##class(Api).GetInstance().GetPartitionCount()
		for i = 1:1:count {
			set id = ##class(Api).GetInstance().GetPartitionIdFromSeq(i)
			if ($length(id) = 0) continue

			if (##class(Api).GetInstance().GetPartitionInfo(id, .type, .size, .used)) {
				do NewLine^COMTable()
				do InsertCell^COMTable(i, , , , "center")
				do InsertCell^COMTable(id, , , , "center")
				do InsertCell^COMTable(type)
				do InsertCell^COMTable($$^WWWTR(0, 12, ((size / GiB) * 100 \ 1) / 100), , , , "right")
				do InsertCell^COMTable($$^WWWTR(0, 12, ((used / GiB) * 100 \ 1) / 100), , , , "right")
				if (size > 0) {
					do InsertCell^COMTable($$^WWWTR(0, 12, ((used / size) * 1000 \ 1) / 10), , , , "right")
				}
				else {
					do InsertCell^COMTable($$^WWWTR(0, 12, ((used / 1) * 1000 \ 1) / 10), , , , "right")
				}

				set text = ""
				set seq = $order(arrDirRel(id, ""))
				while ($length(seq) > 0) {
					set text = text_arrDirRel(id, seq)_"<br>"_$char(13, 10)

					set seq = $order(arrDirRel(id, seq))
				}
				do InsertCell^COMTable(text)

				do EndLine^COMTable()	 
			}
		}

		do Stop^COMTable()
	}

	do ##class(Api).GetInstance().Clear()
	quit

]]></Routine>
</Export>