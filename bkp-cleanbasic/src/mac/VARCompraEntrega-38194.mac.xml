<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARCompraEntrega" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARCompraEntrega
#include COMSYS
#include INConst
#include VARConst

OnBeforeFormConstruction
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Ao construir a tela, verifica se ela deve ser editável ou não, dependendo
    ;	se a Ordem de Compra já está processada ou não.
	;
    ; Chamado por:
    ;	Campo OnBeforeFormConstruction do form VARCompraEntrega.
    ; 
    ; Histórico:
    ;	28-Ago-2012		Alterado comportamento da tela. É possível editar entregas mesmo
    ;					com a ordem de compra processada, desde que o Modelo seja 0-Conforme Solicitação.
    ; 	13-Jul-2010		Criado
    ;-------------------------------------------------------------------------------
	new statusCompra, EntregaPadrao
	
	// Se nenhuma ordem de compra foi escolhida, torna a tela não editável:
	if ($get(YKEY) = "") || ($$$KEY1($get(YKEY)) = "") {
		set $$$WWW120AuthorizationToModifyData(YVOR) = 5
		set $$$WWW120DoNOTDisplayStandardButto(YVOR) = "1;"_$$$WWW120DoNOTDisplayStandardButto(YVOR)
		quit
	}
	
	// Se ordem de compra não aberta, não é possível editar entregas:
	/* 28-Ago-2012
	set statusCompra = +$piece($get(^INAUF(YM,$piece(YKEY,YKOMMA,1),1)),Y,348)
	if (statusCompra '= 0) {
		set $$$WWW120AuthorizationToModifyData(YVOR) = 5
		set $$$WWW120DoNOTDisplayStandardButto(YVOR) = "1;"_$$$WWW120DoNOTDisplayStandardButto(YVOR)
	}
	*/
	
	// Se entrega padrão definida, não é possível editar Entregas:
	set EntregaPadrao = $piece($get(^INAUF(YM,$piece(YKEY,YKOMMA,1),1)),Y,356)
	if (EntregaPadrao '= "") && (EntregaPadrao '= 0) { ;Entrega Padrão 0 = Conforme Solicitação
		set $$$WWW120AuthorizationToModifyData(YVOR) = 5
		set $$$WWW120DoNOTDisplayStandardButto(YVOR) = "1;"_$$$WWW120DoNOTDisplayStandardButto(YVOR)
		do AlertInScript^COMConst(	"Não é possível editar entregas, pois foi definida uma Entrega Padrão na ordem de compra."_YCR_
									"Para editar entregas, é preciso selecionar o modelo 0-Conforme Solicitação.")
	}
	
	quit

OnBeforeButtonLine(YKEY)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Campo OnBeforeButtonLine do form VARCompraEntrega
    ; 
    ; Histórico:
    ; 	13-JuL-2010		Criado
    ;-------------------------------------------------------------------------------	
	do CriaListaDeLinhas(YKEY)
	quit

OnBeforeSave(pYKEY)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Campo OnBeforeSave do form VARCompraEntrega.
    ; 
    ; Histórico:
    ; 	13-Jul-2010		Criado
    ;-------------------------------------------------------------------------------
	new strStatus
	set strStatus = $$$GRIDSave(pYKEY)
	
	if $$$ISERR(strStatus) {
		set Q = $$$QDontSave
		do ReturnError^COMUtilError(strStatus)		
	}

	quit
	
OnAfterDataFields(YKEY)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Campo OnAfterDataFields do form VARCompraEntrega.
    ; 
    ; Histórico:
    ;	29-Ago-2012		Incluída a tabela que lista as entregas e se estas são válidas
    ; 	13-Jul-2010		Criado
    ;-------------------------------------------------------------------------------
	do LoadGrid^VARCompraEntregaLinha(YKEY,YFELD)
	do ListarEntregas^VARCompraEntrega($$$KEY1(YKEY))
	quit
	
OnAfterSave(YKEY)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Campo OnAfterSave do form VARCompraEntrega
    ; 
    ; Histórico:
    ; 	13-Jul-2010		Criado
    ;-------------------------------------------------------------------------------	
	new entregaUniforme
	set entregaUniforme = $piece(YFELD,Y,3)
	set listaVazia = 0
	if (entregaUniforme = 1) {
		do CriaEntregaUniforme(YKEY,YFELD, .listaVazia)
	}
 
	quit

OnBeforeDelete(pidCompraEntrega)
	;-------------------------------------------------------------------------------
	; Descrição:
	;	Antes de deletar o registro pai, deleta as linhas e as tabelas filhas para que
	;	não hajam registros órfãos nestas.
	;
	; Chamado por:
	;	Campo OnBeforeDelete do form VARCompraEntrega.
	;-------------------------------------------------------------------------------	
	new strStatus		
	set strStatus = $$$OK
	set strStatus = $$Transaction^COMTransaction("OnBeforeDeleteTxn^VARCompraEntrega("""_pidCompraEntrega_""")",$$$YES)

	if $$$ISERR(strStatus) {
		set Q = $$$QDontDelete
		do ReturnError^COMUtilError(strStatus)
	}
 
	quit strStatus
	
OnBeforeDeleteTxn(pidCompraEntrega)	
	;-------------------------------------------------------------------------------
	; Chamado por:
	;	Função OnBeforeDelete^VARCompraEntrega.mac
	;-------------------------------------------------------------------------------	
	new strStatus, idCompra, idCompraEntrega
	
	set strStatus = $$$OK
	set idCompra			 = $$$KEY1(pidCompraEntrega)
	set idCompraEntrega	 	 = $$$KEY2(pidCompraEntrega)
	
	if $$$ISOK(strStatus) {
		//Deletando as linhas das entregas programadas do pedido
		$$$Order4(^VARCompraEntregaLinha,YM,idCompra,idCompraEntrega,idCompraEntregaLinha)
			set strStatus = $$$Kill("VARCompraEntregaLinha",idCompra_$$$COMMA_idCompraEntrega_$$$COMMA_idCompraEntregaLinha)
			quit:($$$ISERR(strStatus))
		$$$End
	}
	
	quit strStatus

OnExecutePrazoDeEntrega(pYKEY,pYFELD)
	;-------------------------------------------------------------------------------
    ; Descrição: 
    ;	Valida campo (1)-Prazo de entrega do form VARCompraEntrega: não permite mais
    ;	de uma entrega com o mesmo prazo.
    ;
    ; Chamado por:
    ;	Core rule 1 do campo (3)-Percentual no form VARCompraEntrega.
    ; 
    ; Histórico:
    ; 	13-Jul-2010		Criado
    ;-------------------------------------------------------------------------------
	new strStatus, pidCompra, numEntregaCorrente, prazoDeEntregaCorrente, numEntrega, 
		objEntrega, prazoDeEntrega
	
	set strStatus = $$$OK
	
	set pidCompra = $piece(pYKEY,YKOMMA,1)
	set numEntregaCorrente = $piece(pYKEY,YKOMMA,2)
	set prazoDeEntregaCorrente = $piece(pYFELD,Y,1)
	
	if (pidCompra = "") || (numEntregaCorrente = "") || (prazoDeEntregaCorrente = "") {
		quit strStatus
	}
	
	$$$Order3(^VARCompraEntrega,YM,pidCompra,numEntrega)		
		continue:(numEntrega = numEntregaCorrente)		
		
		set objEntrega = $get(^VARCompraEntrega(YM,pidCompra,numEntrega,1))
		continue:(objEntrega = "")
		
		set prazoDeEntrega = $piece(objEntrega,Y,1)		
		if (prazoDeEntrega = prazoDeEntregaCorrente) {
			set strStatus = $$$NO
			do AlertInScript^COMConst("Já existe outra entrega (Num. "_numEntrega_") no mesmo prazo de "_prazoDeEntregaCorrente_" dias.")
			quit 
		}	
	$$$End
	
	quit strStatus
	
EntregasValidas(pidCompra,&listaStatus)
	;-------------------------------------------------------------------------------
    ; Descrição: 
    ;	Realiza as seguintes validações nas entregas da ordem de compra:
    ;		1. Verifica se há ao menos uma entrega definida
    ;		2. Para cada linha da compra, verifica se a quantidade na compra é igual à
    ;		   soma das quantidades das entregas
    ;		3. Verifica se não há nenhuma entrega sem linhas ou sem prazo de entrega
    ;		4. Verifica se não há nenhuma linha de entrega com quantidade vazia
    ;
    ; Chamado por:
    ;	Process^VARCompra.mac
    ;	ListarEntregas^VARCompraEntrega.mac
    ; 
    ; Histórico:
    ;	28-Ago-2012		Alterado comportamento quando o modelo de entrega é 1-Conforme Solicitação
    ; 	13-Jul-2010		Criado
    ;-------------------------------------------------------------------------------
	new strStatus, objCompra, modeloEntrega, idCompraLinha, objCompraLinha,
		qtyCompra, qtdEntregas, idEntrega, objEntrega, seqLinhaEntrega, objLinhaEntrega
	
	set strStatus = $$$OK
	
	if ($get(pidCompra) = "") {
		set strStatus = "0~Número da ordem de compra não informado."
		quit strStatus
	}	
	
	; Obter registro da Compra
	set objCompra = $get(^INAUF(YM,pidCompra,1))
		
	if ( $get(objCompra) = "" ) {
		set strStatus = "0~Erro ao ler ordem de compra número '"_pidCompra_"'."
		quit strStatus
	}
		
	; Se a entrega é 0-Conforme Solicitação e ainda não foi criada nenhuma entrega, permite passar.
	; Se alguma entrega foi criada após o processamento, aí bloqueia e alerta
	set modeloEntrega = $piece(objCompra,Y,356)
	if ( (modeloEntrega = 0) && ('$data(^VARCompraEntrega(YM,pidCompra))) ) {
		quit $$$YES
	}
	
    ; Verifica se a natureza da AFM é "Estoque - Doação", "Estoque - Ministério da Saúde" ou "Uso Específico"
    set idNatureza = $$GetNaturezaEntrada^VARPedidoCompra($$$INAUFFREE20(objCompra))
    if ((idNatureza = 2) || (idNatureza = 3) || (idNatureza = 6)) {
        quit $$$OK
    }
	; 1) Verifica se há ao menos uma entrega definida.
	if ('$data(^VARCompraEntrega(YM,pidCompra)) ) {
		set strStatus = "0~Nenhuma entrega definida para a Ordem de Compra """_pidCompra_"""."
		quit strStatus
	}
 
	; 2) Para cada linha da compra, verifica se a quantidade na compra é igual à soma das 
	;	quantidades das entregas.
 	$$$Order3(^INAUFP,YM,pidCompra,idCompraLinha)
 		
		set objCompraLinha = $get(^INAUFP(YM,pidCompra,idCompraLinha,1))
		
		if ($get(objCompraLinha) = "") {
			set strStatus = "0~Erro ao ler linha """_idCompraLinha_""" da compra """_pidCompra_"""."
			quit strStatus
		}
		
		set qtyCompra = $piece(objCompraLinha,Y,5)		
		set qtdEntregas = $$GetQuantEntr^VARCompraEntregaLinha(pidCompra,idCompraLinha)
		
		if (qtyCompra = qtdEntregas) {
			set listaStatus(idCompraLinha) = 1
		}
		else {
			set listaStatus(idCompraLinha) = 0_Y_"Qtd. na compra ("_qtyCompra_") diferente da qtd. nas entregas ("_qtdEntregas_")."
			set strStatus = 0
		}
	
	$$$End
	
	if (strStatus '= $$$YES) {
		quit strStatus
	}
	
	; 3) Verifica se não há nenhuma entrega sem linhas ou sem prazo de entrega: 	
 	$$$Order3(^VARCompraEntrega,YM,pidCompra,idEntrega)
		
		set objEntrega = $get(^VARCompraEntrega(YM,pidCompra,idEntrega,1))
		
		if ($get(objEntrega) = "") {
			set strStatus = "0~Erro ao ler entrega """_idEntrega_"""."
			quit
		}
		
		// Verifica se há linhas para a entrega:
		if ('$data(^VARCompraEntregaLinha(YM,pidCompra,idEntrega))) {
			set strStatus = "0~Não há linhas para a entrega """_idEntrega_""" da AFM """_pidCompra_"""."
			quit
		}
		
		// Verifica se há prazo de entrega:
		set prazoDeEntrega = $piece(objEntrega,Y,1)
		if ( +prazoDeEntrega <= 0 ) {
			set strStatus = "0~Prazo de entrega inválido ("_+prazoDeEntrega_" dias) para a entrega """_idEntrega_"""."
			quit
		}
		
		; 4) Verifica se não há nenhuma linha de entrega com quantidade vazia.
		
		$$$Order4(^VARCompraEntregaLinha,YM,pidCompra,idEntrega,seqLinhaEntrega)
			
			set objLinhaEntrega = $get(^VARCompraEntregaLinha(YM,pidCompra,idEntrega,seqLinhaEntrega,1))
			
			if ($get(objLinhaEntrega) = "") {
				set strStatus = "0~Erro ao ler linha """_seqLinhaEntrega_""" da entrega """_idEntrega_"""."
				quit
			}
			
			set qtdEntrega = $piece(objLinhaEntrega,Y,2)
			if (+qtdEntrega <= 0) {
				set strStatus = "0~Quantidade inválida ("_+qtdEntrega_") da linha """_seqLinhaEntrega_""" da entrega """_idEntrega_"""."
				quit
			}
			
		$$$End
 		
 		quit:($$$ISERR(strStatus))
 
	$$$End
	
	quit strStatus

CriaEntregaUniforme(pKeyEntrega,pObjEntrega, listaQtds)
	;-------------------------------------------------------------------------------
    ; Descrição: 
    ;	Ao salvar o registro pela tela VARCompra, na criação automática das
    ;	entregas padrão, se o campo "Entrega Uniforme" estiver selecionado, cria as
    ;	linhas de entrega, baseado no percentual informado. Caso a inserção seja manual,
    ;	os valores serão calculados de acordo com os parâmetros informados.
    ;
    ; Chamado por:
    ;	OnAfterSave^VARCompraEntrega.mac
    ;	CriaEntregasPadrao^VARCompraEntrega.mac
    ; 
    ; Histórico:
    ; 	13-Jul-2010		Criado
    ;-------------------------------------------------------------------------------
	new strStatus, idCompra, numEntrega, entregaUniforme, percentual, idEntregaLinha, 
		idCompraLinha, objCompraLinha, idProduto, qtyCompra, numSeq, qtyEntregaLinha,
		qtyOutrasEntregas, percCalcLinha, objEntregaLinha, listaLinhas
	
	set strStatus = $$$OK
	//--------------------------
	// dados preliminares
	set idCompra 		= $piece(pKeyEntrega,YKOMMA,1)
	set numEntrega 		= $piece(pKeyEntrega,YKOMMA,2)
	set entregaUniforme = $piece(pObjEntrega,Y,3)
	set percentual		= $piece(pObjEntrega,Y,4)
	//----------------------------
	// **** Se campo "Entrega uniforme" NÃO selecionado, sai da rotina:
	quit:(entregaUniforme '= $$$YES)
	
	if ((percentual <= 0) || (percentual > 100)) {
		do AlertInScript^COMConst("Campo de Percentual com valor inválido. Valor deve ser entre 1 e 100.")
		quit
	}
	
	;Limpando possíveis linhas existentes para a entrega
	$$$Order4(^VARCompraEntregaLinha,YM,idCompra,numEntrega,idEntregaLinha)		
		set strStatus = $$KILL^COMUtils("VARCompraEntregaLinha", idCompra_YKOMMA_numEntrega_YKOMMA_idEntregaLinha)	
	$$$End
	
	quit:($$$ISERR(strStatus))

	; Verifica se há uma tabela de quantidades  já preenchido.
	; Se tiver, executa pela tabela, se não, executa o modo manual.	
	set numSeq = 0
	
	if (listaQtds = 0) {
		// modo manual de inserção de dado
		$$$Order3(^INAUFP,YM,idCompra,idCompraLinha)
		
			set objCompraLinha = $get(^INAUFP(YM,idCompra,idCompraLinha,1))
			set idProduto = $piece(objCompraLinha,Y,4)
			set qtyCompra = $piece(objCompraLinha,Y,5)
			
			;Prevenindo erro de divide
			continue:(qtyCompra <= 0)
			
			set numSeq = $increment(numSeq)
			
			set qtyEntregaLinha = $NORMALIZE(qtyCompra * (percentual/100),0) // Arredondando
			
			if (qtyEntregaLinha = 0) {
				set qtyEntregaLinha = 1
			}
			
			set qtyOutrasEntregas = $$GetQuantEntr^VARCompraEntregaLinha(idCompra, idCompraLinha)
			
			if ((qtyCompra - qtyOutrasEntregas) < qtyEntregaLinha) {
				set qtyEntregaLinha = (qtyCompra - qtyOutrasEntregas)
			}
			
			if (qtyEntregaLinha < 0 ) {
				set qtyEntregaLinha = 0
			}

			; Percentual calculado da linha, que pode ser diferente do percentual uniforme,
			; devido aos arredondamentos feitos acima:
			set percCalcLinha = qtyEntregaLinha / qtyCompra * 100
		
			set objEntregaLinha = ""
			set $piece(objEntregaLinha,Y,1) = idCompraLinha
			set $piece(objEntregaLinha,Y,2) = qtyEntregaLinha
			set $piece(objEntregaLinha,Y,7)	= idProduto
			set $piece(objEntregaLinha,Y,8)	= percCalcLinha
		
			set strStatus = $$ChecarQuant^VARCompraEntregaLinha(idCompra_YKOMMA_numEntrega_YKOMMA_numSeq,objEntregaLinha)
			if ( strStatus '= $$$YES) {
				do AlertInScript^COMConst("Ocorreu um erro ao tentar definir entrega de "_percentual_"% para o produto "_idProduto_"."_$char(10)_$piece(strStatus,Y,2)) 
				quit 
			}
	 
			set listaLinhas(numSeq) = objEntregaLinha
			
		$$$End
		
	} else {
		; Novo tratamento para quantidades caso exista a tabela de quantidades preenchida
		; no modo automatico
		
		$$$Order3(^INAUFP,YM,idCompra,idCompraLinha)

			set objCompraLinha = $get(^INAUFP(YM,idCompra,idCompraLinha,1))
			set idProduto = $piece(objCompraLinha,Y,4)
			set qtyCompra = +$piece(objCompraLinha,Y,5)
			
			;Prevenindo erro de divide
			continue:(qtyCompra <= 0)

			set numSeq = $increment(numSeq)
			
			; Percentual calculado da linha, que pode ser diferente do percentual uniforme,
			; devido aos arredondamentos feitos acima:			
			set percCalcLinha = listaQtds(idCompraLinha, numEntrega) / qtyCompra * 100
			
			set objEntregaLinha = ""
			set $piece(objEntregaLinha,Y,1) = idCompraLinha
			set $piece(objEntregaLinha,Y,2) = listaQtds(idCompraLinha, numEntrega)
			set $piece(objEntregaLinha,Y,7)	= idProduto
			set $piece(objEntregaLinha,Y,8)	= percCalcLinha
			
			set strStatus = $$ChecarQuant^VARCompraEntregaLinha(idCompra_YKOMMA_numEntrega_YKOMMA_numSeq,objEntregaLinha)
			
			if (strStatus '= $$$YES) {
				do AlertInScript^COMConst("Ocorreu um erro ao tentar definir entrega de "_percentual_"% para o produto "_idProduto_"."_$char(10)_$piece(strStatus,Y,2)) 
				quit 
			}
	 		set listaLinhas(numSeq) = objEntregaLinha
			
		$$$End
	}

	if (strStatus) {
		// Gera novas linhas:
		set numSeq = ""
		for {
			set numSeq = $order(listaLinhas(numSeq))
			quit:(numSeq = "")
			
			set objEntregaLinha = $get(listaLinhas(numSeq))
			set qtyEntregaLinha = $piece(objEntregaLinha,Y,2)
			
			if (qtyEntregaLinha > 0 ) {
				set strStatus = $$$Save("VARCompraEntregaLinha",idCompra_YKOMMA_numEntrega_YKOMMA_numSeq,objEntregaLinha,1)
			}
		}
	}
	
	quit
	
CriaEntregasPadrao(pidCompra,pobjCompra)
	;-------------------------------------------------------------------------------
    ; Descrição: 
    ;	Se foi definido um modelo de entrega na ordem de compra, cria as diversas entregas
    ;	uniformes correspondentes.
    ;
    ; Chamado por:
    ;	OnAfterSave^VARCompra.mac
    ; 
    ; Histórico:
    ; 	13-Jul-2010		Criado
    ;-------------------------------------------------------------------------------
	new strStatus, idEntrega, idModeloEntrega, objModeloEntrega, listaDePrazos, listaDePorcentagens,
		numEntregas, idCompraLinha, objCompraLinha, idProduto, qtyCompra, somatorioLinha,
		entrega, percentual, porcentagem, prazo, objEntrega

 	set strStatus = $$$OK
	
	quit:(pidCompra = "") "Ordem de compra não definida."
	quit:(pobjCompra = "") "Dados da ordem de compra não definidos."
 	
	// Se já existem entregas para esta AFM, as exclui:
	set entrega = ""
	for {
		set entrega = $order(^VARCompraEntrega(YM,pidCompra,entrega))
		quit:(entrega = "")
		
		;Limpando possíveis linhas existentes para a entrega
		$$$Order4(^VARCompraEntregaLinha,YM,pidCompra,entrega,idEntregaLinha)		
			set strStatus = $$KILL^COMUtils("VARCompraEntregaLinha", pidCompra_YKOMMA_entrega_YKOMMA_idEntregaLinha)		
		$$$End
		
		if ($$$ISOK(strStatus)) {
			// Por algum motivo o $$$KILL^COMUtils não estava funcionando aqui, sempre caia em "Someone changed the record" 
			// e não foi encontrado nenhum motivo para isso em depurações. 
			// set strStatus = $$KILL^COMUtils("VARCompraEntrega",pidCompra_YKOMMA_entrega)
			set strStatus = $$^WWWKILL("VARCompraEntrega",pidCompra_YKOMMA_entrega)
		}
	}
 	
	set idModeloEntrega   = $$$INAUFFREE22(pobjCompra)
	quit:($get(idModeloEntrega) = "") "Modelo de entrega não definido."
	
	set objModeloEntrega = $get(^VARCompraEntregaModelo(YM,idModeloEntrega,1)) 
	quit:($get(objModeloEntrega) = "") "Dados de modelo de entrega não definidos."
	
	// Caso especial: Entrega Padrão do tipo 0-Conforme Solicitação
	quit:(idModeloEntrega = 0) $$$OK
		
	set listaDePrazos 		= $piece(objModeloEntrega,Y,1)
	set listaDePorcentagens = $piece(objModeloEntrega,Y,2)
	
	set numEntregas = $length(listaDePrazos,";")
		
	$$$Order3(^INAUFP,YM,pidCompra,idCompraLinha)
	
		set objCompraLinha = $get(^INAUFP(YM,pidCompra,idCompraLinha,1))
		
		set idProduto = $piece(objCompraLinha,Y,4)
		set qtyCompra = $piece(objCompraLinha,Y,5)
		
		set somatorioLinha = 0
		
		for entrega=1:1:numEntregas {
			
			set percentual = $piece(listaDePorcentagens,";",entrega)
			
			if (somatorioLinha >= qtyCompra){
				set qtdLinha(idCompraLinha, entrega) = 0
			}
			else
				{
				set qtdLinha(idCompraLinha, entrega) = $NORMALIZE(qtyCompra * (percentual/100),0) // Arredondando
				if ( qtdLinha(idCompraLinha, entrega) = 0 ) {
			 		set qtdLinha(idCompraLinha, entrega) = 1 
				}
				set somatorioLinha = somatorioLinha + qtdLinha(idCompraLinha, entrega)
			}
		}
		
		// reajuste de erros causados por arredondamento
		if (somatorioLinha '= qtyCompra) {
			set som = 0
			for i = 2:1:numEntregas {
				set som = qtdLinha(idCompraLinha,i) + som
			}
			set qtdLinha(idCompraLinha, 1) = qtyCompra - som
				
		}
	 
	$$$End

	// Código de gravação
	for entrega=1:1:numEntregas {
		set porcentagem = $piece(listaDePorcentagens,";",entrega)
		set prazo = $piece(listaDePrazos,";",entrega)
		
		set objEntrega = ""
		set $piece(objEntrega,Y,1)  = prazo
		set $piece(objEntrega,Y,3)  = $$$YES
		set $piece(objEntrega,Y,4)  = porcentagem
		set $piece(objEntrega,Y,10) = $$$INAUFLocation(pobjCompra)
		
		set strStatus = $$$Save("VARCompraEntrega",pidCompra_","_entrega,objEntrega,1)
		
		if (strStatus = $$$YES) {
			set qtdLinha = 1
			do CriaEntregaUniforme(pidCompra_","_entrega,objEntrega, .qtdLinha)
			
			if ( '$data(^VARCompraEntregaLinha(YM,pidCompra,entrega)) ) {
				set strStatus = $$KILL^COMUtils("VARCompraEntrega",pidCompra_","_entrega)
				if ('strStatus ) {
					set strStatus = "0~Erro ao excluir entrega '"_entrega_"' que não possui linhas. Mensagem: "_strStatus
					quit
				}
			}
					
		}
	}
	
	quit strStatus
	
AtualizaEntregas(pidCompra,pDataEntregaEmpenho="")
	;-------------------------------------------------------------------------------
    ; Descrição: 
    ;	Atualiza a data de entrega das entregas da compra.
    ;
    ; Chamado por:
    ;	OnAfterSave^VARCompra.mac
    ; 
    ; Histórico:
    ; 	13-Jul-2010		Criado
    ;-------------------------------------------------------------------------------
	new strStatus, numEntrega, objEntrega, prazoDeEntrega, DataDeEntrega	
	set strStatus = $$$OK
	
	if ( $get(pidCompra) = "" ) {
		set strStatus = "0~Número da compra não informado."
		quit strStatus
	}
	
	if ('$data(^INAUF(YM,pidCompra,1))) {
		set strStatus = "0~Compra não cadastrada: "_pidCompra_"."
		quit strStatus
	}
 
 	$$$Order3(^VARCompraEntrega,YM,pidCompra,numEntrega)
		
		set objEntrega = $get(^VARCompraEntrega(YM,pidCompra,numEntrega,1))
		if ($get(objEntrega) = "") {
			set strStatus = "0~Erro ao ler entrega """_numEntrega_""" da compra """_pidCompra_"""."
			quit
		}
		
		// Verifica se há prazo de entrega:
		set prazoDeEntrega = $piece(objEntrega,Y,1)
		if ( +prazoDeEntrega <= 0 ) {
			set strStatus = "0~Prazo de entrega inválido ("_+prazoDeEntrega_" dias) para a entrega """_numEntrega_""" da compra """_pidCompra_"""."
			quit
		}
		
		if ($length(pDataEntregaEmpenho) > 0) {
			// Redefine data de entrega:
			set DataDeEntrega = +pDataEntregaEmpenho + prazoDeEntrega
			set $piece(objEntrega,Y,2) = DataDeEntrega
		
 			// Atualizada Data de Entrega da NE:
			set $piece(objEntrega,Y,9) = $get(pDataEntregaEmpenho)
		}
		
		// Salva:
		set strStatus = $$Save^COMUtils("VARCompraEntrega",pidCompra_YKOMMA_numEntrega,objEntrega,1)
		if ($$$ISERR(strStatus)) {
			quit strStatus
		}

	$$$End
	
	quit strStatus
	
CriaListaDeLinhas(pYKEY)
	;-------------------------------------------------------------------------------
    ; Descrição: 
    ;	Cria temporária "VARTempCompraLinha" que é uma lista temp de linhas da
    ;	ordem de compra relacionado à entrega corrente.
    ;
    ; Chamado por:
    ;	OnBeforeButtonLine^VARCompraEntrega.mac
    ; 
    ; Histórico:
    ; 	13-Jul-2010		Criado
    ;-------------------------------------------------------------------------------	
	new idCompra, objCompraLinha, idCompraLinha, idProduto, nomeProduto
	
	kill ^COMTempList(YM,YBED,"VARTempCompraLinha")
	
	quit:($get(pYKEY) = "")
	
	set idCompra = $piece(pYKEY,YKOMMA,1)
	quit:(idCompra = "")
	
	$$$Order3(^INAUFP,YM,idCompra,idCompraLinha)
		
		set objCompraLinha = $get(^INAUFP(YM,idCompra,idCompraLinha,1))
		continue:(objCompraLinha = "")
		
		set idProduto   = $piece(objCompraLinha,Y,4)
		set nomeProduto = $$SQLGetDescricaoProduto^VARSQL(idProduto)
		
		set ^COMTempList(YM,YBED,"VARTempCompraLinha",idProduto,1) = nomeProduto_Y_idCompraLinha
	
	$$$End
	
	quit
	
ListarEntregas(pidCompra)
	;-------------------------------------------------------------------------------
    ; Descrição: 
    ;	Lista todas as entregas de uma Ordem de Compra.
    ;
    ; Chamado por:
    ;	Campo OnAfterDataFields do form VARCompraEntrega.
    ; 
    ; Histórico:
    ; 	13-Jul-2010		Criado
    ;-------------------------------------------------------------------------------
	new strStatus, listaStatusEntregas, linhaCompra, cabecalhoJaImpresso, lstHeader,
		objCompra, numEntrega, objEntrega, PrazoDeEntrega, listaEntregas,
		i, linhaDaCompra, objlinhaDaCompra, idProduto, qtyCompra, nomeProduto, objLinhaEntrega,
		qtdEntrega, somaQtdEntregas, objPedidoCompra, idCompraEntrega, DataDeEntrega , tipoEntrega
		
	quit:(($get(pidCompra) = "") || (pidCompra = "+"))
	
	write "<br /><strong>Situação das entregas: </strong>"
  	
	set strStatus = $$EntregasValidas^VARCompraEntrega(pidCompra,.listaStatusEntregas)
 	
 	set tipoEntrega = $$$INAUFFREE22($get(^INAUF(YM,YKEY,1)))
 	
	if $$$ISERR(strStatus) {
		write $piece(strStatus,Y,2) // Mostra mensagem de erro
		
		if ($data(listaStatusEntregas)) {
			
			set linhaCompra = ""
			set cabecalhoJaImpresso = $$$NO
			
			for {
				set linhaCompra = $order(listaStatusEntregas(linhaCompra))
				quit:(linhaCompra = "")
				if ( listaStatusEntregas(linhaCompra) '= $$$YES ) {
					
					write:(cabecalhoJaImpresso '= $$$YES) "<br />Entregas inválidas para as seguintes linhas da compra:"
					set cabecalhoJaImpresso = $$$YES
					write "<br />"_linhaCompra_": "_$piece(listaStatusEntregas(linhaCompra),Y,2)
				}
			}
		}
	}
	else {
        ; Verifica se a natureza da AFM é "Estoque - Doação", "Estoque - Ministério da Saúde" ou "Uso Específico"
        set idNatureza = $$GetNaturezaEntrada^VARPedidoCompra($$$INAUFFREE20($get(^INAUF(YM,YKEY,1))))
        if ((idNatureza = 2) || (idNatureza = 3) || (idNatureza = 6)) {
            write "Esta AFM possui Natureza de Entrada """_$$SQLGetNaturezaEntrada^VARSQL(idNatureza)_""", portanto, entregas programadas não são obrigatórias."
        }
        else {
	        
	        if (tipoEntrega = 0){ 
            	write "Entrega conforme solicitação."
	        }elseif (tipoEntrega = ""){
		    	Write "Nenhuma entrega definida para a Ordem de Compra """_pidCompra_"""."
		    }else{
				Write "Entregas válidas."
			}
        }
        
	}
	
	set lstHeader = ""
	set lstHeader = lstHeader_$listbuild("Seq.","Produto","Quant.&nbsp;<br />&nbsp;&nbsp;Compra")
	
	$$$Order3(^VARCompraEntrega,YM,pidCompra,idCompraEntrega)
		
		set objEntrega = $get(^VARCompraEntrega(YM,pidCompra,idCompraEntrega,1))
		quit:($get(objEntrega) = "")
		
		set listaEntregas(idCompraEntrega) = objEntrega
		set PrazoDeEntrega = $piece(objEntrega,Y,1)
		set DataDeEntrega = $piece(objEntrega,Y,2)
		
		if (DataDeEntrega '= "") {
			set lstHeader=lstHeader_$listbuild("Entrega "_idCompraEntrega_"&nbsp;<br />&nbsp;"_PrazoDeEntrega_" dias<br />"_$zdatetime(DataDeEntrega,4))		
		} else {
			set lstHeader = lstHeader_$listbuild("Entrega "_idCompraEntrega_"&nbsp;<br />&nbsp;"_PrazoDeEntrega_" dias<br />&nbsp;&nbsp;<font color=#666666>Data indefinida</font>")
		}
		
	$$$End
	
	set lstHeader = lstHeader_$listbuild("Quant.&nbsp;<br />&nbsp;&nbsp;Entregas") 
	;INICIO CONTABLE
	if '((tipoEntrega = 0) || (tipoEntrega = "")){
		if $$Start^COMTable(lstHeader,"Entregas por linha da compra:") {
		
			set linhaDaCompra = ""
			for i=1:1 {
				set linhaDaCompra = $order(^INAUFP(YM,pidCompra,linhaDaCompra))
				quit:(linhaDaCompra = "")
			
				set objlinhaDaCompra = $get(^INAUFP(YM,pidCompra,linhaDaCompra,1))
				continue:(objlinhaDaCompra = "")
			
				set idProduto = $piece(objlinhaDaCompra,Y,4)
				set qtyCompra = +$piece(objlinhaDaCompra,Y,5)
			
				set nomeProduto = $$SQLGetDescricaoProduto^VARSQL(idProduto)
				;set nomeProduto = $zconvert(nomeProduto,"O","HTML")
						
				do NewLine^COMTable()
				do InsertCell^COMTable(linhaDaCompra)
				do InsertCell^COMTable("("_idProduto_") "_nomeProduto)
				do InsertCell^COMTable($$^WWWTR(0,12,qtyCompra))

				set numEntrega = "",somaQtdEntregas = 0
			
				for {
					set numEntrega = $order(listaEntregas(numEntrega))
					quit:(numEntrega = "")
 
					set linhaEntrega = $order(^VARCompraEntregaLinhas(YM,1,$$^WWWUMLAU(pidCompra,1),linhaDaCompra,numEntrega,""))
					if ( $get(linhaEntrega) '= "" ) {
						set objLinhaEntrega = $get(^VARCompraEntregaLinha(YM,pidCompra,numEntrega,linhaEntrega,1))
						set qtdEntrega = $piece(objLinhaEntrega,Y,2)

						//Evitando erro de DIVIDE
						if (qtyCompra = 0) {
							do InsertCell^COMTable(qtyCompra)
						} else {
							do InsertCell^COMTable(qtdEntrega_" ("_$normalize(qtdEntrega/qtyCompra*100,1)_"%)")
						}

						set somaQtdEntregas = somaQtdEntregas + qtdEntrega
					}
					else {
						do InsertCell^COMTable("")
					}
				}
			
				if (qtyCompra = 0) {
					do InsertCell^COMTable(qtyCompra)
				} else {
					do InsertCell^COMTable(somaQtdEntregas_" ("_$normalize(somaQtdEntregas/qtyCompra*100,1)_"%)")
				}
			
				do EndLine^COMTable()	 
			}
 
			do Stop^COMTable()
		} ;FIM CONTABLE
	}
	
	quit

DefineDataDeEntrega(pidCompra,pPrazoDeEntrega)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Campo "Executar na Construção do Formulário (antes)" do form VARCompraEntrega
    ;	no campo (2)-Data de Entrega.
    ; 
    ; Histórico:
    ; 	13-Jul-2010		Criado
    ;------------------------------------------------------------------------------- 
	new dteEntregaEmpenho, dteEntrega
 
 	quit:($get(pidCompra) = "") ""
 	quit:($get(pPrazoDeEntrega) = "") ""
 		
	set dteEntregaEmpenho = $$getDataEntregaEmpenho^VARCompra(pidCompra)
	quit:(dteEntregaEmpenho = "") ""
	
	set dteEntrega = +dteEntregaEmpenho + pPrazoDeEntrega
	if (+dteEntrega > 0) quit $zdatetime(+dteEntrega,4)
	
	quit ""
	
ChecarPercentualEhValido()
	;-------------------------------------------------------------------------------
    ; Descrição: 
    ;	Verifica se o percentual é válido.
    ;
    ; Chamado por:
    ;	Core rule 3 do campo (3)-Percentual no form VARCompraEntrega.
    ; 
    ; Histórico:
    ; 	13-Jul-2010		Criado
    ;-------------------------------------------------------------------------------		
	new percentual,entregaUniforme
	
	set percentual = +$piece(YFELD,Y,4)
	set entregaUniforme = $piece(YFELD,Y,3)
	
	if (entregaUniforme = 1) {
		if ( (percentual <= 0) || (percentual > 100) ) {
			do AlertInScript^COMConst("Campo de Percentual com valor inválido. Valor deve ser entre 1 e 100.")
			quit $$$NO
		}
	}
	quit $$$YES
	
MostraDataEntregaEmpenho()
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Campo "Executar na Construção do Formulário (antes)" do form VARCompraEntrega
    ;	no campo (9)-Data de Entrega da NE.
    ;
    ; Histórico:
    ; 	13-Jul-2010		Criado
    ;------------------------------------------------------------------------------- 
	new dteEntregaEmpenho
	set dteEntregaEmpenho = $$getDataEntregaEmpenho^VARCompra($$$KEY1(YKEY))
 
	if ($get(dteEntregaEmpenho) '= "" ) {
		quit $zdatetime(+dteEntregaEmpenho,4)
	}
 
	quit ""	
	

AlertarNoRecebimento(pidReceipt,pobjReceipt)
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Exibe mensagens informando se existe ou não alguma entrega programada para
    ;	a data de recebimento. Exibe também as datas de todas as entregas programadas
    ;	para a ordem de compra, e uma tabela de todos os itens do recebimento e suas
    ;	entregas.
    ;
    ; Chamado por:
    ;	Função OnAfterDataFields^INReceipt.mac.
    ;
    ; Histórico:
    ; 	19-Jul-2010		Criado
    ;------------------------------------------------------------------------------- 
	new idCompra, dteRecebimento, lstHeader, numEntrega, objEntrega, listaEntregas, prazoEntrega,
		dteEntrega, listaEntregasPorData, entregaCoincidente, msg, msgEntregas, idReceiptLine,
		objReceiptLine, objReceiptLine, idProduto, qtyRecebida, descProduto, objCompraLinha,
		qtyCompra, linhaEntrega, objEntregaLinha, qtyEntrega, statusRec, tipoLinha, listaEntregasPorPrazo
	
	set statusRec = $piece(pobjReceipt,Y,4)
	if (statusRec >= 1) {
		write "<div style='margin-left:25px'>Este recebimento já foi processado.</div>"
		;quit
	}
	
	;Processing Date
	set dteRecebimento = $piece($piece(pobjReceipt,Y,8),",",1)

	;Changed Date
	if (dteRecebimento = "") {
		set dteRecebimento = $piece($piece(pobjReceipt,Y,80),",",1)
	}
	
	;Created Date
	if (dteRecebimento = "") {
		set dteRecebimento = $piece($piece(pobjReceipt,Y,6),",",1)
	}
	
	set idCompra = $piece(pobjReceipt,Y,30)	
	if (idCompra = "") {
		write "<div style='margin-left:25px'>Nenhuma AFM foi associada a este recebimento. Não é possível fazer a validação das entregas.</div>"
		quit
	}

	quit:(idCompra = "")
	
	write "<div style=margin-left:25px;><strong>Atenção</strong>, verifique abaixo a situação das entregas programadas para a AFM "_idCompra_" antes de processar o recebimento.</div>"

	set lstHeader = ""
	set lstHeader = lstHeader_$listbuild("Seq.","Código/Descrição","Quant.&nbsp;<br />&nbsp;&nbsp;Recebida","Quant.&nbsp;<br />&nbsp;&nbsp;na AFM")

	$$$Order3(^VARCompraEntrega,YM,idCompra,numEntrega)

		set objEntrega = $get(^VARCompraEntrega(YM,idCompra,numEntrega,1))
		quit:(objEntrega = "")
		
		set listaEntregas(numEntrega) = objEntrega
		
 		set prazoEntrega = $piece(objEntrega,Y,1)
		set dteEntrega   = $piece(objEntrega,Y,2)
		
		set listaEntregasPorPrazo(prazoEntrega)]]><![CDATA[ = numEntrega_Y_dteEntrega
		
		if ($get(dteEntrega) '= "") {
			set listaEntregasPorData(dteEntrega) = numEntrega
		}
		
		if (dteEntrega '= "") {
			set lstHeader = lstHeader_$listbuild("Entrega "_numEntrega_"&nbsp;<br />"_prazoEntrega_" dias"_"<br />&nbsp;&nbsp;"_$zdatetime(dteEntrega,4))
		} else {
			set lstHeader = lstHeader_$listbuild("Entrega "_numEntrega_"&nbsp;<br />"_prazoEntrega_" dias"_"<br />"_"&nbsp;&nbsp;Data indefinida")
		}		
	
	$$$End
	
	set entregaCoincidente = ""
	if ($get(listaEntregasPorData(dteRecebimento)) '= "") {
		set numEntrega = listaEntregasPorData(dteRecebimento)
		set msg = "<font color='blue'>A entrega programada de número """_numEntrega_""" possui data de entrega igual à data de recebimento de "_$zdate(dteRecebimento,4)_".</font>"
		set entregaCoincidente = numEntrega
	} else {
		set msg = "<font color='red'>Não há nenhuma entrega programada com data de entrega igual à data de recebimento de "_$zdate(dteRecebimento,4)_".</font>"
	}
	
	write "<div style='margin-left:25px;margin-top:4px'>"_msg_"</div>"
	write "<div style='margin-left:2px'>"
		
	set msgEntregas    = ""
	set prazoDaEntrega = ""
	for {
		set prazoDaEntrega = $order(listaEntregasPorPrazo(prazoDaEntrega))
		quit:(prazoDaEntrega = "")
		if ( $get(msgEntregas) = "" ) {
			set msgEntregas = "<B>Entregas programadas para a AFM de número "_idCompra_":</B>"
		}
		set numEntrega 		= $piece($get(listaEntregasPorPrazo(prazoDaEntrega)),Y,1)
		set dataDaEntrega 	= $piece($get(listaEntregasPorPrazo(prazoDaEntrega)),Y,2)
 
		set msgEntregas = msgEntregas_"<BR>"_"Em "_prazoDaEntrega_" dias"
		if ( $get(dataDaEntrega) = "" ) {
			set msgEntregas = msgEntregas_" - Data indefinida"
		}
		else {
			set msgEntregas = msgEntregas_" - Data: "_$zdatetime(dataDaEntrega,4)
		}
		set msgEntregas = msgEntregas_" - Entrega Número: "_numEntrega_"."
	}

	write "<BR>"_msgEntregas 
	write "<BR>"

	if $$Start^COMTable(lstHeader,"Análise das entregas para cada produto neste recebimento:",,,$$$NO) {
		
		$$$Order3(^INRECSummary,YM,pidReceipt,idReceiptLine)
		
			set objReceiptLine = $get(^INRECSummary(YM,pidReceipt,idReceiptLine,1))
			continue:(objReceiptLine = "")
			
			;Considerar somente linhas do tipo 0-Produto
			set tipoLinha = $$$INRECSummaryLineType(objReceiptLine)
			continue:(tipoLinha '= 0)
			
			set idCompraLinha = $piece(objReceiptLine,Y,2)			
			
			;Ignora caso não tenha uma linha de compra associada
			quit:(idCompraLinha = "")
			
			set idProduto	  = $piece(objReceiptLine,Y,6)
			set qtyRecebida   = $piece(objReceiptLine,Y,33)			
			set descProduto   = $$SQLGetDescricaoProduto^VARSQL(idProduto)		

			set objCompraLinha = $get(^INAUFP(YM,idCompra,idCompraLinha,1))
			set qtyCompra = +$$$INAUFPOrderedQuantity(objCompraLinha)

			do NewLine^COMTable()
			do InsertCell^COMTable(idReceiptLine)
			do InsertCell^COMTable(idProduto_" - "_descProduto)		
			do InsertCell^COMTable($$^WWWTR(0,12,qtyRecebida))
			do InsertCell^COMTable($$^WWWTR(0,12,qtyCompra))	
			
			set numEntrega = ""
			for {
				set numEntrega = $order(listaEntregas(numEntrega))
				quit:(numEntrega = "")
 
				set linhaEntrega = $order(^VARCompraEntregaLinhas(YM,1,$$^WWWUMLAU(idCompra,1),idCompraLinha,numEntrega,""))
				
				if (linhaEntrega '= "") {
					set objEntregaLinha = $get(^VARCompraEntregaLinha(YM,idCompra,numEntrega,linhaEntrega,1))
					set qtyEntrega = $piece(objEntregaLinha,Y,2)
					do InsertCell^COMTable(qtyEntrega_" ("_$normalize(qtyEntrega/qtyCompra*100,1)_"%)")
				}
				else {
					do InsertCell^COMTable("")
				}
			}		
			do EndLine^COMTable()		
		
		$$$End
		do Stop^COMTable()
	}
	
	do PrintTableRecebimentos^VARCompra(idCompra)
	
	write "</div>"	
	quit
	
getNoEntregasCompra(pidCompra)
	new count, idEntrega
	set count = 0
	$$$VAR
	$$$Order3(^VARCompraEntrega,0,pidCompra,idEntrega)		
		set count = $increment(count)
	$$$End
	
	quit count	

MostraLocalEntregaCompra()

	new localEntrega, objCompra
	
	if ($$$VARCompraEntregaLocaldeEntrega(YFELD) '= ""){
		quit $$$VARCompraEntregaLocaldeEntrega(YFELD)
	}
	
	set objCompra = $get(^INAUF(YM,$$$KEY1(YKEY),1))
	set localEntrega = $$$INAUFLocation(objCompra)	
 
	if ($get(localEntrega) '= "" ) {
		quit localEntrega
	}
 
	quit ""	
]]></Routine>
</Export>