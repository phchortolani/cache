<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWW0121" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWW0121
	
#include COMSYS
#include %occInclude
#include INConst
	 
	;-------------------------------------------------------------------------------
	; Description of Function : 
	;		BUTTON FÃœR DIE AUSWAHL DER Betriebe
	;
	; Params : no explicit variables
	;
	;
	; Implicit Inputs :
	;	YHID		1	?
	;				2	?
	;	YFORM		Form ID
	;	YART		Field type (P/D/M)
	;	YLFN		Field number
	;	YGIF		Image path
	;
	; Returns : nothing
	;
	;
	; History :
	; 08-Apr-2014	shobby	SESDF-920: New treeview location popup.
	; 21-Aug-2007	Frank	SRBR014566: refactoring: putting the URL formation in a new tag.
	; 12-Jun-2007	RPW		SRadhoc: removed . syntax
	; 06-Jun-2007	GRF		SR15522: removed orphan </A>; cleared unneeded YCRs &
	; 						consolidated block of changed code
	; 05-May-2007	HeberB	SR15522: Replace open.window by subwindow
	; 26-Apr-2007	shobby	SRBR014454:	Change the image to a tree
	; 22-Dec-2006	GRF		SR15208: Expand commands; split URL construction
	; 03.06.2001	DT
	;-------------------------------------------------------------------------------
	; ERSTELLEN DES BUTTONS
	quit:$get(YHID)=1
	quit:$get(YHID)=2
	
	write "<IMG SRC="_""""_YGIF_"searchtree.gif"_""""_" ALIGN=ABSBOTTOM TITLE="_""""_$$^WWWTEXT(148)_""""_" border=0"    ; "Search"
	write " class=link "
	if YXTYP=19 {
		write " onClick='"_$$CreateLocationPopupJS^WWWFORM719("Y"_YFORM_YART_YLFN)_"'" ;SESDF-920 
	} else {
		write " onClick='"_$$CreateLocationPopupJS("Y"_YFORM_YART_YLFN)_"'"
	}
	write ">"
	
	quit
	
GetTopLevel() ;CORE-303
	quit $order(^WWW0121s(0,2,0,$$Index^COMUtilIndex("","WWW0121"),0,"")) ;CORE-303
	
	
TempReqValidation(pidKey,YFELD,pidCompany,pidToLocn,pidFromLocn)
	;-------------------------------------------------------------------------------
	; Temporary validation called by (alREQ.dUReq).IsFirmable
	; to ensure we can't firm if bad locations in header
	; 
	; History:
	; 14-Dec-2007	GRF/HUY	pidToLocn required for D3
	; 13-Dec-2007	GRF		Created
	;-------------------------------------------------------------------------------
	new strStatus
	
 	set strStatus = $$OnDataAccess^WWW0121(pidCompany_","_pidToLocn,"INReq","D",3,YFELD)       ; $$$FldINReqToLocn
 
 	if $$$ISOK(strStatus) {
	 	set strStatus = $$OnDataAccess^WWW0121(pidCompany_","_pidFromLocn,"INReq","D",4,YFELD) ; $$$FldINReqFromLocn
 	}
 	
 	quit strStatus
	
	
TempReqLineValidation(pidKey,YFELD,pidCompany,pidFromLocn)
	;-------------------------------------------------------------------------------
	; Temporary validation called by (alREQ.dUReqLine).IsFirmable
	; to ensure we can't firm if dodgy ReqLine entries
	; 
	; History:
	; 13-Dec-2007	GRF		Created
	;-------------------------------------------------------------------------------
	new GKEY
	
	set GKEY = pidKey
 	quit $$OnDataAccess^WWW0121(pidCompany_","_pidFromLocn,"INReqLine","D",9,YFELD)   ; $$$FldINReqLineFromStockLocn
 
	
OnDataAccess(YKEY,YFORM,pidDataType,pintFldNo,YFELD)
	;-------------------------------------------------------------------------------
	; Limits the list of locations that a user can switch to based on the 'Allowed Locations'
	; in the users profile.
	; 
	; Called by:
	; 	WWWFieldValidation		
	; 	COMViewFilter			
	; 	WWWFOR71				
	; 	WWWSEAR3				Search
	; 	
	; Params:
	;	pstrKey				WWW0121 Key (Company,Locn)
	;	YFORM				Calling Form ID - provides
	;	pidDataType			P, D, or M			(YART)
	;	pintFldNo			Field Number		(YLFN)
	;	YFELD				Current (unsaved) Data Structure
	;	
	; Returns:
	; 	$$$NO		Location is Not Accessable
	; 	$$$YES		Location is Accessable
	;
	; History:
	; 13-Jun-2013	shobby	CORE-101: Missing bracket routine failed to compile.
	; 13-Jun-2013	SCR		HEVA-971: Disable Type validation
	; 20-Mar-2013	SCR		HEVA-811: Valdate INReq with Type based on Destination Location
	; 05-Sep-2012	shobby	SR18090: Can only Issue to departments.
	; 27-Apr-2012	shobby	SR17826: Validate idCompany and idLocn
	; 01-Mar-2012	shobby	SR17826: Disable using Inactive locations.
	; 17-Aug-2009	GRF		SR16768: text corrections
	; 20-Jul-2009	DWR		SR16772: Added form INReqKit to be handled as INReq
	; 17-Jul-2009	PPP		SR16768:1. Added checks for DispenseToPatient form (location checks)
	;								2. Added language text IN01080
	; 11-Mar-2009	GRF		SR16415: Add $$TransferLocation test to allow
	; 							"Consumable" requisitions.
	; 13-Jan-2009	HQN		SR16296: Location check based on ReqType for ReqLines
	; 12-Jan-2008	HQN		SR16296: Depending on ReqType, alter Location rules
	; 11-Dec-2007	GRF		SR15612: Parent needs to come from Grid key (GKEY)
	; 07-Dec-2007	GRF		SR15612: Apply to INReqLine
	; 04-Dec-2007	GRF		SR15612: Restrict Locations on INReq & INMOV
	; 15-Nov-2007	GRF		SR15563: Internationalise - WWW00078, WWW00079
	; 							(May already be covered by restricted relation validation)
	; 24-Oct-2007	GRF		SR15563: Generalise for locn hierarchy; DO NOT put "+"
	; 							in front of $$$KEY1
	; 28-Sep-2007	shobby	SRBR014724: Created
	;-------------------------------------------------------------------------------
	new blnDataAccess,idCompany,idFromLocn,idFromMainLocn,idLocn,idParent,idToLocn,idToMainLocn
	new objParent,objWWW013,strLocnList,strPath,objWWW0121 ;SR17826
 
	set idCompany = $$$KEY1(YKEY)
	set idLocn    = $$$KEY2(YKEY)
	
	if (idCompany'="") && (idLocn'="") { 
		set objWWW0121 = $get(^WWW0121(0,idCompany,idLocn,1)) ;SR17826
	} else {
		set objWWW0121 = ""
	}
	;---------------------------------------
	; TODO : <GRF> can we preserve for YBED so don't need to re-get strLocnList for each location every time?
	; Would need to clear out if ^WWW013 is changed
	
	set objWWW013   = $get(^WWW013(0,YBED,1))
	set strLocnList = $$$WWW013AllowedLocations(objWWW013)
	;---------------------------------------
	set blnDataAccess = $$$YES
	
	;if ##class(%Library.Routine).Exists(YFORM_"ODA") xecute "set blnDataAccess=$$"_YFORM_"ODA^OnDataAccess(""WWW0121"",YLFN,YKEY,YFELD)" ;CORE-385.16

	if YFORM="WWW0131B" {                                 ; Change Location - Authorised
		set blnDataAccess = $$AccessAllowed(idCompany,idLocn,strLocnList)
		
	} elseif YFORM="INLP" {                                     ; Storage Places - Inventory Locn
		if '$$InventoryAllowed^WWW0121Rules(idCompany,idLocn) {    ; common code version
			set blnDataAccess = $$$MakeStatus("WWW00078")       ; "This location isn't set as an Inventory Location"
		}
		
		
	} elseif YFORM="INTFRRequest" {                             ; Transfer - Transfer Locn
		if '$$TransferLocation^WWW0121Rules(idCompany,idLocn) {
			set blnDataAccess = $$$MakeStatus("WWW00079")       ; "This location isn't set as an Transfer Location"
		}
	} elseif (YFORM = "INReq") || (YFORM = "INReqKit") {
		if '$$InventoryAllowed^WWW0121Rules(idCompany,idLocn) && '$$TransferLocation^WWW0121Rules(idCompany,idLocn) { ; SR16057
			set blnDataAccess = $$$MakeStatus("WWW00111")     ;	"This location must be either an Inventory or a Transfer Location."
		}  ;CORE-101
	} elseif YFORM = "INReqLine" {
		if '$$InventoryAllowed^WWW0121Rules(idCompany,idLocn) {
			set blnDataAccess = $$$MakeStatus("WWW00078")     ; "This location isn't set as an Inventory Location"
			
		} elseif pidDataType="D" {
			if pintFldNo=9 {
				set idParent = $$$KEY1($get(GKEY))
				if idParent'="" {
					set objParent = $get(^INReq(0,idParent,1))
					set idFromLocn 	= $$$INReqFromLocn(objParent)
					set idToLocn 	= $$$INReqToLocn(objParent) ; ; HEVA-811
				}
			}
		}	
		; HEVA-811 ^^^^
	//*****
	// vvv SR16768
	} elseif YFORM = "INDispenseToPatient" {

		if '$$InventoryAllowed^WWW0121Rules(idCompany,idLocn) && '$$TransferLocation^WWW0121Rules(idCompany,idLocn) { ; SR16057
			set blnDataAccess = $$$MakeStatus("WWW00111")     ;	"This location must be either an Inventory or a Transfer Location."

		
		} elseif pidDataType="D" && ( ($$$INIssueType(YFELD)="") || ($$$INIssueType(YFELD)=1) || ($$$INIssueType(YFELD)=2) ) {		//Only for Issue Type 1 & 2

			if pintFldNo=2 {
				new objToLocn
    
			    if (idLocn '= "") {   
			    	set objToLocn = $get(^WWW0121(0,YM,idLocn,1))
			        if ($$$WWW0121LocationType(objToLocn)'=2) {		  ;Department
			        	set blnDataAccess = $listbuild( "WWW00179")  ;To Location is not type department
			        }
			    }
			    if blnDataAccess=$$$YES {
					set idFromLocn = $$$INIssueFromLocn(YFELD)
					if idFromLocn=idLocn {
						set blnDataAccess = $listbuild("IN01079") 					; "Issue requires different locations"
					
					} elseif idFromLocn'="" {
						set idFromMainLocn = $$MainSite^WWW0121Utils(idCompany,idFromLocn)
						set idToMainLocn   = $$MainSite^WWW0121Utils(idCompany,idLocn)
					
						if (idToMainLocn="") {
							set blnDataAccess = $listbuild("IN00384",idLocn) 		; "Can't find main location for %1"
					
						} elseif (idFromMainLocn="") {
							set blnDataAccess = $listbuild("IN00384",idFromLocn) 	; "Can't find main location for %1"
					
						} else {
							if $$$INIssueType(YFELD) = 1 { ; Department 
								if idFromMainLocn'=idToMainLocn {
									set blnDataAccess = $listbuild("IN01077",idToMainLocn,idFromMainLocn)
								;                       "Issue requires the same Main Location : %1, %2"
								}
							} elseif $$$INIssueType(YFELD) = 2 { ; Transfer
								if idFromMainLocn=idToMainLocn {
									set blnDataAccess = $listbuild("IN01078",idToMainLocn,idFromMainLocn)
								;                       "Issue requires different Main Locations : %1, %2"
								}
							} else {
								//
							}
						}
					}
			    }
			} elseif pintFldNo=3 {
				set idToLocn = $$$INIssueToLocn(YFELD)
				if idToLocn=idLocn {
					set blnDataAccess = $listbuild("IN01079")				; "Issue requires different locations"
					
				} elseif idToLocn'="" {
					set idFromMainLocn = $$MainSite^WWW0121Utils(idCompany,idLocn)
					set idToMainLocn   = $$MainSite^WWW0121Utils(idCompany,idToLocn)
					if (idToMainLocn="") {
						set blnDataAccess = $listbuild("IN00384",idToLocn) 	; "Can't find main location for %1"
					
					} elseif (idFromMainLocn="") {
						set blnDataAccess = $listbuild("IN00384",idLocn)  	; "Can't find main location for %1"
					} else {
						if $$$INIssueType(YFELD) = 1 { ; Department 
							if idFromMainLocn'=idToMainLocn {
								set blnDataAccess = $listbuild("IN01077",idToMainLocn,idFromMainLocn)
							;                       "Issue requires the same Main Location : %1, %2"
							}
						} elseif $$$INIssueType(YFELD) = 2 { ; Transfer
							if idFromMainLocn=idToMainLocn {
								set blnDataAccess = $listbuild("IN01078",idToMainLocn,idFromMainLocn)
							;                       "Issue requires different Main Locations : %1, %2"
							}
						} else {
							//
						}
					}
				}
			}
		}	
	
	// ^^^ SR16768
	
	} elseif YFORM = "INMOV" {
		if '$$InventoryAllowed^WWW0121Rules(idCompany,idLocn) {
			set blnDataAccess = $$$MakeStatus("WWW00078")     ; "This location isn't set as an Inventory Location"
			
		} elseif pidDataType="D" {
			if pintFldNo=2 {
				if idLocn'=YLOCATION {
					set strPath = $$GetPath^WWW0121Utils(idCompany,idLocn)
					set strPath = $$$COMMA_$translate(strPath,"~",",")_$$$COMMA
					if strPath'[($$$COMMA_YLOCATION_$$$COMMA) {
						set blnDataAccess = $listbuild("IN00513",YLOCATION)
					;                       "Move Location must be local to user's location : %1"
					}
				}
			}
		}
	
	} elseif YFORM="INIssueRevNI" {                                 ; Change Location - Authorised
		set blnDataAccess = $$AccessAllowed(idCompany,idLocn,strLocnList)
	}
	
	quit blnDataAccess
	
	
AccessAllowed(pidCompany,pidLocn,pstrLocnList)
	;-------------------------------------------------------------------------------
	; Limits the list of locations that a user can switch to based on the 'Allowed Locations'
	; in the users profile.
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 24-Oct-2007	GRF		SR15563: Extract from OnDataAccess
	;-------------------------------------------------------------------------------
	new blnAllowed
	
	set blnAllowed = $$$NO
	if (pidCompany=YM) && (pidLocn'="") {
		if (pstrLocnList="") || ((";"_pstrLocnList_";")[(";"_pidLocn_";")) {
			set blnAllowed = $$$YES
		}
	}
	quit blnAllowed
	
	
CreateLocationPopup(strFieldId)
	;-------------------------------------------------------------------------------
	; Write the javascript code to create a popup screen.
	; This routine is similar to ^WWW0121.
	; 
	; The ^WWW0121 write the image of the search tree with the link. It should
	; be used on a form construction to place the button after or before the data field. 
	; The routine ^WWW0121 only works if you use it within the events "Execute on Form
	; Construction (before)" or "Execute on Form Construction (after)" because it uses
	; the global variables YART and YLFN.
	; 
	; This routine writes just the code to be executed to show the popup screen.
	; It should be used on a CallBackNow call or directly from a EventValue call. This
	; routine was created to be used to add the Location Search screen button after a 
	; datafield. Create a button, and add the call on the "Hyper Event OnClick" field:
	; 
	; - 'CreateLocationPopup^WWW0121'              if the button is to be shown on a Grid Edit    or
	; - 'CreateLocationPopup^WWW0121(YFormnameD2)' if the button is to be shown after the regular datafield.
	; 
	; You should pass as parameter the data field type (e.g. 'M', 'D') and the data 
	; field number of the field that will receive the id of the Location selected on
	; the popup screen.
	; 	
	; Then go the field definition where you want to add the button next to and select
	; the created button on the property 'Button After Input Field'.
	; 
	; ***** 18-Oct-2007: Additional notes.
	; 					 Create a button in a grid form with the 'Function (JavaScript) OnClick' property
	; 					 set to CallBack('CreateLocationPopup^WWW0121','YFIELDNAME')
	; 					 Then it is not necessary to use the "Execute on Form Construction (after)"
	; 					 or worry about the id of the field
	;
	; Params:
	; 	strFieldId	 - the id of the field that will receive the id of the selected location.
	;
	; Returns:
	;
	; History:
	; 18-Oct-2007	shobby	SRBR014566: More information in header comments.
	; 23-Aug-2007	Frank	SRBR014566: Created
	;-------------------------------------------------------------------------------
	&html<
		#($$CreateLocationPopupJS(strFieldId))#
	>
	quit $$$OK
	
CreateLocationPopupJS(strFieldId)
	;-------------------------------------------------------------------------------
	;
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 18-Oct-2007	shobby		SRBR014566: Commented
	;-------------------------------------------------------------------------------
	new strURL,strOPT
	
	set strURL = YAKTION_"EP=WWWMANU1&amp;YEXEC=D|START^WWW0121&amp;YUSER="_YUSER_"&amp;YBED="_YBED_"&amp;YTRAKT="_YTRAKT
	set strURL = strURL_"&amp;YUCI="_$get(YUCI)_"&amp;YM="_YM_"&amp;YKEY="_YKEY_"&amp;YBACK="_YBACK_"&amp;YLFDAT="_strFieldId
	set strURL = strURL_"&amp;YLFFORM="_$get(YBBN)_"&amp;YFORM="_YFORM
	set strOPT = "HEIGHT=500,WIDTH=400,SCROLLBARS=YES,RESIZEABLE=YES"
 
	quit "subWindow("""_strURL_""",""Structure"","""_strOPT_""");"
	
	
START
	;-------------------------------------------------------------------------------
	;	AUSWERTEN VARIABELEN UND STARTEN WWWPARAM (ANZEIGE DATEN IN MENUFORM) 
	; 
	; History:
	; 09-Sep-2008	GRF		
	; 05-Sep-2007	GRF		SR15594: fix for SRBR014582 - YM is required to work with
	; 							all other forms, YKEY is special situation.
	; 18-Jul-2007	Karine	SRBR014582: Search location popup was fixed for company
	; 							related to the user logged in.
	; 12-Jun-2007	RPW		SR15537: Let the system know to close on existing data
	; 12-Jun-2007	RPW		SRadhoc: removed . syntax
	;-------------------------------------------------------------------------------
	NEW (%request,%session,%KEY,%,%ZCS,%CGIEVAR)
	
	DO ^WWWVAR  ;VORGABEN SETZEN ;set defaults
	
	; FIXME : This is the * OLD * hierarchy structure based on delimiters and
	;         *NOT* the Parent Location field (WWW0121 D20).
	;         Using this mechanism location 1004-1 is subordinate to 1004
	;         regardless of the link in D20.
	;         
	;         A record for ^WWW0121(0,0,"A-B-C-D") becomes
	;                      ^WWW01210(0,"A","B","C","D") = "name~A-B-C-D"
	
	;---------------------------------------
	; WWW01210 is not a defined @nM class; it is a multi-level keyed structure
	; created from WWW0121.  A recently created list will be reused; an older
	; list will be replaced.
	; 
	; ^WWW01210(0,idLocnTree) = strLocnName [WWW0121D1] ~ idLocn
	; 
	; If idLocn contains sub-locations specified by recognised delimiters
	; (e.g. "1\4\2") they will be split apart into the various pieces,
	; treating each as a separate sub-key with the delimiter characters
	; being converted to "." for processing.
	; 
	; e.g. ^WWW01210(0,1,4,2) = "Locn Name~1.4.2"
	;
	; NOTE : there is no final 1 subscript on the key since it is a multi-level key.
	;---------------------------------------
	
	LOCK +^WWW01210(YM):0 IF $TEST KILL ^WWW01210(YM)
	
	IF '$DATA(^WWW01210(YM)) {
		set BETRIEB=""
		for {
			set BETRIEB=$order(^WWW0121(0,0,BETRIEB))
			quit:BETRIEB=""
 
			SET BETRIEB(0)   = $TRANSLATE(BETRIEB,",;-_?/+*#':<>\^|{[]}","....................")       ;ALLES PUNKT
			SET BETRIEB("T") = $PIECE($GET(^WWW0121(0,0,BETRIEB,1)),Y,1)_Y_BETRIEB
			SET BETRIEB(9)   = "^WWW01210("_""""_YM_""""
			FOR BETRIEB(1)=1:1 {
				SET BETRIEB(2) = $PIECE(BETRIEB(0),".",BETRIEB(1))
				QUIT:BETRIEB(2)=""
				
				SET BETRIEB(9) = BETRIEB(9)_","_""""_BETRIEB(2)_""""
			}
			
			SET BETRIEB(8)  = BETRIEB(9)_")" 
			SET @BETRIEB(8) = BETRIEB("T")       ; Create ^WWW01210
		}
	}
	
	;---------------------------------------
	;&FILE		= DATEI DIE ANGEZEIGT WIRD (STANDARD=WWWEXPLORE)
	;&FIX		= FESTER ERSTER KEY (NUR WENN &FILE)
	;&RECORD	= FELDER DIE ANGEZEIGT WERDEN SOLLEN (STANDARD=1)
	;&OFFSET	= STRUKTUR (WIRD GEBILDET)
	;&HEAD		= TEXT FÃœR HEADER
	;---------------------------------------
	SET %(YQUERY,"TARGET") = $GET(YTARGET)     ;TARGET DER AUSGABE ;the expenses 
	SET %(YQUERY,"FILE")   = "WWW01210"
	
	;---------------------------------------
	; NOTE : Class WWW0121 allows the user to set up location details for a company
	;        when not in that company.  It is necessary to obtain the company ID
	;        from YKEY than simply YM.
	;---------------------------------------
	
	; Could also test for YFORM="SALLocation" but that form does not appear to be in use. <GRF>
	
	if YFORM="WWW0121" {                       ; SRBR014582   ; SR15594
		SET %(YQUERY,"FIX") = YKEY
	} else {
		SET %(YQUERY,"FIX") = YM
	}
	SET %(YQUERY,"RECORD") = "1"               ; FIELDS TO BE NOTIFIED ; FELDER, DIE ANGEZEIGT WERDEN (1,2,3,4)
	SET %(YQUERY,"YUCI")   = $GET(YUCI)        ; NAMESPACE
	SET %(YQUERY,"HEAD")   = $$^WWWTEXT(388)   ; "Location"    BETRIEB
	SET %(YQUERY,"YKEY")   = YKEY
	SET %(YQUERY,"YTRAKT") = YTRAKT
	SET %(YQUERY,"YBACK")  = YBACK
	SET %(YQUERY,"FORM")   = YFORM             ;ERFASSEN  ;Edit 
	SET %(YQUERY,"YFORM")  = YFORM             ;ERFASSEN BETRIEB ;Edit location 
	SET %(YQUERY,"OFFSET") = ""                ;ANZEIGE AB SUBSCRIPT ;Show Confirm. 
	;SET %(YQUERY,"YBILD") = "www"             ;ANZEIGE AB SUBSCRIPT
	;&YLFDAT="_"Y"_YFORM_YART_YLFN_"&YLFORM="_$get(YBBN)
 
	set YIGNOREJUMP=1                          ; SR15537
	
	MERGE %KEY=%(YQUERY)
	
	DO ^WWWPARAM
	QUIT
	
	
OnBeforeSave(pidKey,pYFELD,pYFORM="WWW0121")
	;-------------------------------------------------------------------------------
	; On Before Save of WWW0121 form
	;
	; Params:
	;	pidKEY		YM,locn
	;	pYFELD		objWWW0121
	;	pYFORM		"WWW0121C", etc. as means of triggering extra validation
	;	
	; ByRefs:
	;	Q			Save/Don't Save flag
	; 
	; Returns: none
	;
	; History:
	; 29-Nov-2011	GRF		SR17967: Ensure location hierarchy is up-to-date before
	;							Getting current cost centre in OnLocnChange.
	; 23-Oct-2009	GRF		SR16871: Check potential changes affecting Cost Centre
	; 15-Oct-2007	GRF		SR15563: Created
	;-------------------------------------------------------------------------------
	new idCompany,idLocn,strStatus
	
	set idCompany = $$$KEY1(pidKey)
	set idLocn    = $$$KEY2(pidKey)
	
	do MakePath^WWW0121Utils(idCompany)             ; SR17967
	set strStatus = $$OnBeforeSave^WWW0121Rules(idCompany,idLocn,pYFELD,pYFORM)
	
	if $$$ISERR(strStatus) {
		$$$DecomposeStatus(strStatus)
		$$$Alert(strStatus)
		set Q = $$$QDontSave
		
	} else {  ; SR16871
		do OnLocnChange^INCostCentre(idLocn,pYFELD)
	}
	
	quit
	
OnBeforeSaveHook(pidKey,pYFELD)
	;-------------------------------------------------------------------------------
	; On Before Save of WWW0121 class
	;
	; Params:
	;	pidKEY		YM,locn
	;	pYFELD		objWWW0121
	;
	; Returns: Status
	;
	; History:
	; 02-Dec-2013	SCR		SESDF-696: Relax Location Rules
	; 25-Nov-2013	SCR		SESDF-655: Created
	;-------------------------------------------------------------------------------
	new idCalc,idDefault,idLoc,intLoc,lstIssue,lstTran,objVORG,strStatus
	set strStatus	= $$$OK
	set objVORG 	= $get(^INVORG(YM,YM,1))
	set idCalc	= +$$$INVORGTransferorIssueCalc(objVORG)
	if idCalc=4 {
		if $$$WWW0121DistributionLocn(pYFELD) {
			set lstIssue	= $$$WWW0121IssueLocations(pYFELD)
			set lstTran		= $$$WWW0121TransferLocations(pYFELD)
			set idDefault	= $$$WWW0121DefaultSupplingLocation(pYFELD)
			;if $translate(lstIssue_";"_lstTran,";")="" {
			;	set strStatus	= $$$Text( "WWW00192")  ;This Location is defined a Transfer Location and is using the 'Based on Transfer & Issue Locations' seeting in INVORG. There must be at least 1 Location defined in 'Transfer Locations ' or 'Issue Locations'
			;}
			if $$$ISOK(strStatus) {
				for intLoc = 1:1:$length(lstIssue,";") {
					set idLoc	= $piece(lstIssue,";",intLoc)
					if idLoc'="" {
						if (";"_lstTran_";")[(";"_idLoc_";") {
							set strStatus	= $$$Text($listbuild("WWW00193",idLoc))  ;Location %1 can not be in 'Issue Locations' and 'Transfer Locations'
						}
					}								
				}
			}
			if $$$ISOK(strStatus) {
				if idDefault'="" {
					if (";"_lstIssue_";"_lstTran_";")'[(";"_idDefault_";") {
						;set strStatus	= $$$Text($listbuild("WWW00194",idDefault))  ;The Default Location %1 must be in 'Transfer Locations' or 'Issue Locations'
					}
				}
			}
		}
	}
	

	quit strStatus
	
OnAfterSave(pYKEY,pYFELD)
	;-------------------------------------------------------------------------------
	; On After Save of WWW0121 form
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 26-Oct-2007	GRF		SR15563: pass coy to DeleteStockLoc since may not match YM
	; 18-Oct-2007	GRF		SR15563: Rebuild Location Path shortcut; correct keys
	; 							for FINMATRIX call
	; 28-Apr-2006	JW		SR14421: Created
	;-------------------------------------------------------------------------------
	new idCompany,idLocn
	
	set idCompany = $$$KEY1(pYKEY)
	set idLocn    = $$$KEY2(pYKEY)
	do MakePath^WWW0121Utils(idCompany)             ; SR15563
	do FINMATRIX^INFIBCHARMATRIX(pYKEY,pYFELD)		; Code from form def
	do CreateDeleteStockLoc(idCompany,idLocn)
	quit
	
	
CreateDeleteStockLoc(pidCompany,pidLocn)
	;-------------------------------------------------------------------------------
	; Create Delete Stock location for this location
	;
	; Params:
	;	pidCompany
	;	pidLocn		Location
	;
	; History:
	; 24-Oct-2008	HQN		SR16057: Create delete storage for transfer locations
	; 							this allows handling of consumption locations
	; 11-Feb-2008	GRF		
	; 26-Oct-2007	GRF		SR15563: Don't create if location is not flagged as
	; 							an "Inventory Location"; pass coy since may not
	; 							match YM if called from form WWW0121
	; 28-Apr-2006	JW		SR14421: Created
	;-------------------------------------------------------------------------------
	new idDelStkLocn
	
	set idDelStkLocn = $$$INVORGDeleteStockLocation($get(^INVORG(pidCompany,pidCompany,1)))
	
	quit:idDelStkLocn=""
	
	;if $$InventoryAllowed^WWW0121Rules(pidCompany,pidLocn) {
	if $$InventoryAllowed^WWW0121Rules(pidCompany,pidLocn) || $$TransferLocation^WWW0121Rules(pidCompany,pidLocn) { ; SR16057
	;	if '$data(^INLP(YM,pidLocn,idDelStkLocn,1)) {
		if '$data(^INLP(pidCompany,pidLocn,idDelStkLocn,1)) {
			do Save^COMUtils("INLP",pidLocn_","_idDelStkLocn,"",1)
		}
	}
	quit
	
	
OnDeleteCheck(pidKey,pYFELD,pYFORM)
	;-------------------------------------------------------------------------------
	; History:
	; 29-Sep-2008	Luke	SR15936: Created
	;-------------------------------------------------------------------------------
	new idCompany,idLocn,objLocn,strStatus,strMessage
	
	set strStatus = $$$OK
	set idCompany = $$$KEY1(pidKey)
	set idLocn    = $$$KEY2(pidKey)
	set objLocn = ##class(alLOC.dLocation).%OpenId(idLocn)
	set Q=$$$QDelete
	if objLocn '= $$$NULLOREF {
		if objLocn.Storages.Count() > 0 {
			set strMessage = $$$Text("alLOC0008",idLocn)
			set Q=$$$QDontDelete _" "_	strMessage
		}
	} ; "Can not Delete Location (%1) as storages still exist. Please remove all Storages from this location to delete"
	quit
	
	
OnBeforeDelete(pidKey,pYFELD,pYFORM="WWW0121")
	;-------------------------------------------------------------------------------
	; On Before Deletion of WWW0121 form
	;
	; Params:
	;	pidKEY		YM,locn
	;	pYFELD		objWWW0121
	;	pYFORM		"WWW0121C", etc. as means of triggering extra validation
	;	
	; ByRefs:
	;	Q			Save/Don't Save flag
	; 
	; Returns: none
	;
	; History:
	; 29-Nov-2011	GRF		SR17967: Ensure location hierarchy is up-to-date before
	;							Getting current cost centre in OnLocnChange.
	; 23-Oct-2009	GRF		SR16871: Check potential changes affecting Cost Centre
	; 17-Oct-2007	GRF		SR15563: Created
	;-------------------------------------------------------------------------------
	new idCompany,idLocn,strStatus
	
	set idCompany = $$$KEY1(pidKey)
	set idLocn    = $$$KEY2(pidKey)

	do MakePath^WWW0121Utils(idCompany)             ; SR17967
	set strStatus = $$OnBeforeDelete^WWW0121Rules(idCompany,idLocn,pYFELD,pYFORM)
	if $$$ISERR(strStatus) {
		set Q=$$$QDontDelete	
		$$$DecomposeStatus(strStatus)
		$$$Alert(strStatus)
		
	} else {  ; SR16871
		do OnLocnChange^INCostCentre(idLocn,"")
	}
	
	quit strStatus
	
OnAfterDelete(pYKEY)
	;-------------------------------------------------------------------------------
	; On After Delete of WWW0121 form
	;
	; Params:
	; 	pYKEY	for form WWW0121	P1,P2
	; 			         WWW0121C	YM
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 18-Oct-2007	GRF		SR15563: Created to Rebuild Location Path shortcut
	;-------------------------------------------------------------------------------
	do MakePath^WWW0121Utils($$$KEY1(pYKEY))        ; pass idCompany       ; SR15563
	quit
	
GetGroupDemandsBy(pidLoc)
	;-------------------------------------------------------------------------------
	; Get the Group Demands by Method, defaults to 0 if undefined.
	;
	; Inputs:
	;
	; ByRef:
	;
	; Returns:
	;
	; History:
	; 29-May-2007	RPW		SR15513: Created
	;-------------------------------------------------------------------------------
	quit +$$$WWW0121GroupDemandsBy($get(^WWW0121(0,0,pidLoc,1)))
 
 
IsDistributionLocation(pidLocn)
	;-------------------------------------------------------------------------------
	; Whether the location is distribution Location or not.
	;
	; Params:	pidLocn
	;
	; Returns:	status
	;
	; History:
	; 10-Oct-2007	GRF		SR15563: Macro change
	; 30-Jul-2007	Karine	BR15548: Created
	;-------------------------------------------------------------------------------
	new strStatus,objWWW0121
	
	set strStatus = $$$YES
	if pidLocn'="" {
		set objWWW0121=$get(^WWW0121(0,0,pidLocn,1))
		set strStatus = $$$WWW0121DistributionLocn(objWWW0121)  ; SR15563
	}	
	
	quit strStatus
 
OnBeforeDataAccess(pYKEY,pYFELD)
	;-------------------------------------------------------------------------------
	; In COMView, show just locations from item selected
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 16-Jun-2014	shobby	CORE-385.16: Moved IN code to IN routines.
	; 25-Mar-2014	SCR		SESDF-1299:Only allow co
	; 10-Dec-2014	SCR		SESDF-655: Use filter if $$$INVORGTransferorIssueCalc(objVORG) = 4
	; 21-Jan-2008	GRF		SRBR014847: variable prefix; doco
	; 15-Jan-2008 	Luis	SRBR014847: Added a check for valid locations when
	; 							coming from INWEINVELINE
	; 18-Dec-2007	GM		SRBR014818: Created
	;-------------------------------------------------------------------------------
	new idCalc,idFromLoc,idLoc,idSite,idToLoc,lstFromLocs,lstIssueLocs,lstTranLocs
	new objLoc,objStocktake,objToLoc,objVORG,strSiteLocns,strStatus
 
 	$$$VAR
	set strStatus = $$$OK
	if ##class(%Library.Routine).Exists(YFORM_"OBDAEx") xecute "set strStatus=$$OnBeforeDataAccess^"_YFORM_"OBDAEx(""WWW0121"",YLFN,YKEY,YFELD)" ;CORE-385.16
	quit strStatus 
	
	
TemporaryStorageLocations(pidLocn,pblnIgnoreThis=$$$NO)
	;-------------------------------------------------------------------------------
	; Returns whether this location supports TSU (pallets) or,
	; if inherited ($$$INHERIT = ""), continue looking up the location tree for an answer.
	;
	; Inputs:
	; pblnIgnoreThis : $$$YES - Show inherited value if we set current location to $$$INHERIT
	;                  $$$NO  - Show current actual or inherited value
	;
	; Returns:
	;
	; History:
	; 11-Nov-2010	shobby	SR17612: $$$INHERIT macro is now ""
	; 26-Oct-2010	GRF		SR17541: $$$INHERIT macro
	; 07-Oct-2010	shobby	SR17541: Created
	;-------------------------------------------------------------------------------
	new blnResult,objWWW0121
	
	set blnResult = $$$NO
	if pidLocn'="" {
		for {
			set objWWW0121 = $get(^WWW0121(0,0,pidLocn,1))
			if 'pblnIgnoreThis {
				set blnResult = $$$WWW0121TemporaryStorageLocations(objWWW0121)
				quit:(blnResult'=$$$INHERIT)
			
			} else {
				set pblnIgnoreThis = $$$NO
			}
			set pidLocn = $$$WWW0121ParentLocn(objWWW0121)
			quit:(pidLocn="")
		}
		
	}
	if blnResult=$$$INHERIT set blnResult = $$$NO  ;Top location
	quit blnResult


LocationName(pidLocn="")
	;-------------------------------------------------------------------------------
	; Get Location Name
	;
	; Inputs: 	Patient ID
	;
	; Returns: Data to Display
	;
	; History:
	; 20-Nov-2013	shobby		CORE-290: Created
	;-------------------------------------------------------------------------------
	new objLocn,strLocn
	
	set strLocn=""
	
	if pidLocn'="" {
		set objLocn= $get(^WWW0121(0,YM,pidLocn,1))
		set strLocn = $$$WWW0121LocationName(objLocn)
	}
	quit strLocn

OnBeforeSQL(&YSQL,pidForm,pidField)
	;-------------------------------------------------------------------------------
	;The optimize location search based on the user is allowed a locations
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 01-aPR-2014	SCR		SESDF-1299: Check for null forms
    ; 28-Mar-2014	SCR		SESDF-1299: Created .
	;-------------------------------------------------------------------------------
	if (pidForm'["WWW")&&(pidForm'="") {  ; Dont do this for System Forms
		set YSQL =
			"SELECT WWW0121.ID "_
			"FROM   WWW0121 "_
			"WHERE WWW0121.UserAccess=1 "
	}
	quit $$$OK
	
GetUserAccess(pidLocation)
	;-------------------------------------------------------------------------------
	; Returns the user access based on WWW013 and YBED
	; 
	; Inputs: pidLocation
	;
	; Returns: 1 if the user has access to the location
	;
	; History:
    ; 28-Mar-2014	SCR		SESDF-1299: Created .
	;-------------------------------------------------------------------------------
	new objUser
	
	quit:$get(Y)="" 1 ; Not in @NM 
	quit:$get(YM)="" 1 ; Not in @NM 
	quit:$get(YBED)="" 1 ; No user
	
	set objUser			= $get(^WWW013(YM,YBED,1))
	set lstAllowedLocs	= ";"_$$$WWW013AllowedLocations(objUser)_";"
	set blnAllowed		= lstAllowedLocs[(";"_pidLocation_";")
	quit blnAllowed
]]></Routine>
</Export>