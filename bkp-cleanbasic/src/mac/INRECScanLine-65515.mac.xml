<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INRECScanLine" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INRECScanLine
	quit

#include COMSYS
#include INConst
#include %occInclude

#define EnumTypeStandard	0

OnBeforeButtonLine(pidKey, &pobjLine)
	;-------------------------------------------------------------------------------
	; OnBeforeButtonLine for FORM INRECScanLine
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 22-Jun-2011	PPP		SR17802: Created
	;-------------------------------------------------------------------------------
	
	//set ^zzPP($i(^zzPP))="OnBeforeButtonLine"
	kill ^CacheTemp(YUCI,YUSER,"TSU")
	
	quit

OnAfterPrimaryKey(pidKey, &pobjLine)
	;-------------------------------------------------------------------------------
	; OnAfterPrimaryKey for FORM INRECScanLine
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 22-Jun-2011	PPP		SR17802: Created
	;-------------------------------------------------------------------------------
	new objReceipt
	
	set objReceipt = $get(^INREC(0,$$$KEY1(pidKey),1))
	if $$$INRECScanLineLocation(pobjLine)="" {
		set $$$INRECScanLineLocation(pobjLine) = $$$INRECLocation(objReceipt)
	}

	//set ^zzPP($i(^zzPP))="OnAfterPrimaryKey:"_$$$INRECLocation(objReceipt)
	
	quit


	//do OnBlurQty^INRECScanLine(YKEY,.YFELD,GROW,GCOL)

OnBlurQty(pstrKeys,&pobjSummary,pidGridRow,pintCol)
	;-------------------------------------------------------------------------------
	; Called By : Execute On Blur for INRECScanLine field 3
	; 
	; Inputs :
	;	pstrKeys	- INRECScanLine key    (YKEY)
	;	pobjSummary	- INRECScanLine object (YFELD)
	; 
	; ByRef: YFORM
	; 
	; History:
	; 22-Jun-2011	PPP		SR17802: Created
	;-------------------------------------------------------------------------------
	new fltConv,idItem
	new idInventUnit

	set idItem = $$$INRECScanLineItem(pobjSummary)
	
	if idItem'="" {
		set fltConv = $$GetUOMConversion^INUOMConversion($$$INRECScanLineItem(pobjSummary),$$$INRECScanLineReceivedUnit(pobjSummary),.idInventUnit) 
		set $$$INRECScanLineInventoryQuantity(pobjSummary) = $$$INRECScanLineUnitQuantityReceived(pobjSummary) * fltConv
	}
	
	quit
	

FirmScan(pidReceipt)
	;-------------------------------------------------------------------------------
	; Firm the Scan Lines
	;
	;
	; History:
	; 23-Jun-2011	PPP		SR17802: Created
	;-------------------------------------------------------------------------------
	new objReceipt,strStatus

	set strStatus  = $$$OK
	set objReceipt = $get(^INREC(0,pidReceipt,1))
	
	if ($$$INRECStatus(objReceipt) '= $$$EnumINSTATUSUnprocessed) {
		set strStatus = $$$MakeStatus("IN00377")  ; "Record already processed"
		do ReturnError^COMUtilError(strStatus)
		
	} else {   

		set strStatus = $$Transaction^COMTransaction("FirmScanTxn^INRECScanLine("""_pidReceipt_""")",$$$YES)
	}
	
	if $$$ISOK(strStatus) {
		//do ReloadForm^COMUtilForm()	
		do GoToForm^COMUtilForm("INReceipt",pidReceipt,2,YPARA) ; go straight to tab 2
	} else {
		do ReturnError^COMUtilError(strStatus)
	}
	
	quit


FirmScanTxn(pidReceipt)
	;-------------------------------------------------------------------------------
	; Firm the Scan Lines
	;
	;
	; History:
	; 23-Jun-2011	PPP		SR17802: Created
	;-------------------------------------------------------------------------------
	new objReceipt,strStatus
	new idLn
	
	set objReceipt = $get(^INREC(0,pidReceipt,1))
	
	set strStatus='$$$OK
	
	set idLn = ""
	for {
		set idLn = $order(^INRECScanLine(0,pidReceipt,idLn))
		quit:idLn=""
		
		set strStatus = $$CreateINRECSummary(pidReceipt,idLn)	
		
		if $$$ISOK(strStatus) {
			set strStatus = $$CreateINRECLine(pidReceipt,idLn)
		}

		quit:$$$ISERR(strStatus)
	}

	if $$$ISOK(strStatus) {
		set $$$INRECFirmed(objReceipt) = $$$YES
		set strStatus = $$$Save("INREC",pidReceipt,objReceipt,$$$YES)
	}

	quit strStatus

CreateINRECSummary(pidReceipt,pidLn)
	;-------------------------------------------------------------------------------
	; Create INRECSummary record from INRECScanLine record
	; 
	; Param:
	;	pidReceipt		INREC Keys
	;	pidLn			INRECScanLine
	;
	; Returns:
	;	strStatus		
	;
	; History:
	; 23-Jun-2011	PPP		SR17802: Created
	;-------------------------------------------------------------------------------
	new strStatus
	new idSupp
	new objScanLn
	new idItem
	new fltQty
	new idUnit
	new idSummLn
	new objSummLn
	new fltExtendedCost
	

	set strStatus = $$$OK
	set idSupp = $$$INRECSupplier($get(^INREC(0,pidReceipt,1)))
	set objScanLn  = $get(^INRECScanLine(0,pidReceipt,pidLn,1))
	
	set idItem = $$$INRECScanLineItem(objScanLn)
	set fltQty = $$$INRECScanLineUnitQuantityReceived(objScanLn)
	set idUnit = $$$INRECScanLineReceivedUnit(objScanLn)
	
	set idSummLn = ""
	for	{
		set idSummLn = $order(^INRECSummary(0,pidReceipt,idSummLn))
		quit:idSummLn=""
		
		set objSummLn = $get(^INRECSummary(0,pidReceipt,idSummLn,1))
		//Item & Unit combination
		if (($$$INRECSummaryItem(objSummLn)=idItem) && ($$$INRECSummaryReceivedUnit(objSummLn)=idUnit)) quit
	}

	if idSummLn=""	{
		set $$$INRECSummaryItem(objSummLn)             	= idItem
		set $$$INRECSummaryReceivedUnit(objSummLn)     	= idUnit		//$$GetSupplierUOM^INARTUtilities(idItem,idSupp)
		set $$$INRECSummarySupplierItemCode(objSummLn) 	= $$GetSupplierItemNo^INARTUtilities(idItem,idSupp)
		set $$$INRECSummaryLineType(objSummLn) 			= $$$EnumTypeStandard
		set $$$INRECSummaryUnitQtyReceived(objSummLn)	= fltQty
		do UpdateRecQty^INRECSummaryUtil(.objSummLn)
		set idSummLn = $order(^INRECSummary(0,pidReceipt,""),-1)+1		//Next ^INRECSummary line			
		//do $zu(139,1) set ^zzPP($i(^zzPP))=idSummLn_":"_0_":"_$$$INRECSummaryUnitQtyReceived(objSummLn) do $zu(139,0)
	} else {
		set objSummLn = $get(^INRECSummary(0,pidReceipt,idSummLn,1))
		set $$$INRECSummaryUnitQtyReceived(objSummLn)	= $$$INRECSummaryUnitQtyReceived(objSummLn)+fltQty
		do UpdateRecQty^INRECSummaryUtil(.objSummLn)
		///FIXME:check if the costs allocated are correct
		set $$$INRECSummaryUnitCost(objSummLn) = $$GetSuppCost^INRECSummary(idItem,idSupp,idUnit)		
		set fltExtendedCost = $$$INRECSummaryUnitQtyReceived(objSummLn) * $$$INRECSummaryUnitCost(objSummLn)
		set $$$INRECSummaryExtendedCost(objSummLn) = fltExtendedCost
		//do $zu(139,1) set ^zzPP($i(^zzPP))=idSummLn_":"_fltQty_":"_$$$INRECSummaryUnitQtyReceived(objSummLn) do $zu(139,0)
	}

	set strStatus  = $$$Save("INRECSummary",pidReceipt_$$$COMMA_idSummLn,objSummLn,$$$YES)
	
	quit strStatus

CreateINRECLine(pidReceipt,pidLn)
	;-------------------------------------------------------------------------------
	; Create INRECLine record from INRECScanLine record
	; 
	; Param:
	;	pidReceipt		INRECSummary Keys
	;	pidLn
	;	pobjScan		INRECScan Record
	;
	; Returns:
	;	strStatus		
	;
	; History:
	; 23-Jun-2011	PPP		SR17802: Created
	;-------------------------------------------------------------------------------
	new enumLineType
	new strStatus
	new idSupp
	new objScanLn
	new objINREC
	new objINRECLine
	new fltConv
	new idUnit
	new idItem
	new idRLn
	new idRECLn
	new idUnitCost
	
	set strStatus = $$$OK
	set objINREC = $get(^INREC(0,pidReceipt,1))
	set idSupp = $$$INRECSupplier(objINREC)

	set objScanLn  = $get(^INRECScanLine(0,pidReceipt,pidLn,1))
	set idItem = $$$INRECScanLineItem(objScanLn)
	set idUnit = $$$INRECScanLineReceivedUnit(objScanLn)

	set idRLn = ""
	for	{
		set idRLn = $order(^INRECLine(0,pidReceipt,idRLn))
		quit:idRLn=""
		
		if $$$INRECLineItem($get(^INRECLine(0,pidReceipt,idRLn,1))) = idItem quit
	} 

	if idRLn	'= ""	{
		set idRECLn = $translate(idRLn,"x",".")+$$$CopyIncrement
	} else {
		set idRECLn = $order(^INRECLine(0,pidReceipt,""),-1)+1		//Next INRECLine #
	}

	set objINRECLine = ""	
	set $$$INRECLineSupplier(objINRECLine)      = $$$INRECSupplier(objINREC)
	set $$$INRECLineLocation(objINRECLine)      = $$$INRECLocation(objINREC)
		
	set $$$INRECLineItem(objINRECLine)          = idItem
	set $$$INRECLineQuantity(objINRECLine)      = $$$INRECScanLineInventoryQuantity(objScanLn)
	set $$$INRECLineUnit(objINRECLine)          = idUnit
	set $$$INRECLineUnitQuantity(objINRECLine)  = $$$INRECScanLineUnitQuantityReceived(objScanLn)
	set $$$INRECLineReceivedUnit(objINRECLine)  = idUnit
	set $$$INRECLineInclude(objINRECLine)       = $$$YES

	///FIXME:check if the costs allocated are correct
	set fltConv = $$GetUOMConversion^INUOMConversion($$$INRECLineItem(objINRECLine),$$$INRECLineUnit(objINRECLine))
	set idUnitCost = $$GetSuppCost^INRECSummary(idItem,idSupp,idUnit)
	if fltConv {
		set $$$INRECLineEach(objINRECLine)      = +$justify(idUnitCost/fltConv,0,$$DPforInventoryCost^INVORG())
	} 

	set $$$INRECLineStockLocation(objINRECLine) = $$$INRECScanLineStorage(objScanLn)
	set $$$INRECLineFlag(objINRECLine)          = $order(^INWEMERKER(0,""))   ; Defaults ^INWEMERKER enum "OK"

	set strStatus  = $$$Save("INRECLine",pidReceipt_$$$COMMA_idRECLn,objINRECLine,$$$YES)

	quit strStatus
	
IsFirmable(pidReceipt, pobjReceipt="")
	;-------------------------------------------------------------------------------
	; Can this record be "Firmed"?
	; 
	; CalledFrom:
	;	Firm Receipt Button INReceipt Form
	; 
	; History:
	; 23-Jun-2011	PPP		SR17802: Created
	;-------------------------------------------------------------------------------
	new strStatus
	new blnLines
	new idScan
	new objScan
	new idItem
	new idUnit
		
	set strStatus = $$$OK

	if $$IsScanReq^WWW120Scan("INRECScanLine") {
	
		if $$$NoKey(pidReceipt) {
			set strStatus = $$$MakeStatus("374")               //"Select Data Record"
	
		} elseif ($$$INRECStatus(pobjReceipt) '= 0) {						
			set strStatus = $$$MakeStatus("IN00377")           //"Record already processed"
	
		} elseif $$$INRECFirmed(pobjReceipt) {
			set strStatus = $$$MakeStatus("IN01035")           //"Receipt already firmed"
		
		} else {       // perform other INRECScanLine validation

			set blnLines = $$$NO
			set idScan = ""
			for {
				set idScan = $order(^INRECScanLine(0,pidReceipt,idScan))
				quit:idScan=""
			
				set blnLines = $$$YES
				set objScan  = $get(^INRECScanLine(0,pidReceipt,idScan,1))
				set idItem = $$$INRECScanLineItem(objScan)
				set idUnit = $$$INRECScanLineReceivedUnit(objScan)

				if ($$$INRECScanLineUnitQuantityReceived(objScan)="") {
					set strStatus = $$$MakeStatus("IN01084",idScan)    // "Quantity Received required on line %1"
				
				} elseif ($$$INRECScanLineUnitQuantityReceived(objScan)'>0) {
					set strStatus = $$$MakeStatus("IN01085",idScan)    // "Quantity Received must be greater than 0 on line %1"
				
				} elseif (idUnit="") || '$data(^INARTPACK(0,idItem,idUnit,1)) {
					set strStatus = $$$MakeStatus("IN01037",idScan)    // "Inappropriate unit on line %1"
				}
		
			}

			if $$$ISOK(strStatus) && 'blnLines {
				set strStatus = $$$MakeStatus("IN01038")	// "No summary lines"
			} 

		}
	
		$$$YQHandler(strStatus)
		
	} else {

		set YQ = 2
	}

	quit strStatus

]]></Routine>
</Export>